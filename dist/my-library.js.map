{"version":3,"file":"my-library.js","mappings":"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","sources":["webpack://canvasForPrint/webpack/universalModuleDefinition","webpack://canvasForPrint/./node_modules/streamsaver/StreamSaver.js","webpack://canvasForPrint/webpack/bootstrap","webpack://canvasForPrint/webpack/runtime/define property getters","webpack://canvasForPrint/webpack/runtime/hasOwnProperty shorthand","webpack://canvasForPrint/webpack/runtime/make namespace object","webpack://canvasForPrint/./lib/utils/pixelsToUnit.js","webpack://canvasForPrint/./lib/core/size/setDisplaySize.js","webpack://canvasForPrint/./lib/core/size/index.js","webpack://canvasForPrint/./lib/defaults.js","webpack://canvasForPrint/./lib/core/saveFile/saveFile.js","webpack://canvasForPrint/./lib/UI/Container.js","webpack://canvasForPrint/./lib/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"canvasForPrint\"] = factory();\n\telse\n\t\troot[\"canvasForPrint\"] = factory();\n})(this, () => {\nreturn ","/*! streamsaver. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\n/* global chrome location ReadableStream define MessageChannel TransformStream */\n\n;((name, definition) => {\n  typeof module !== 'undefined'\n    ? module.exports = definition()\n    : typeof define === 'function' && typeof define.amd === 'object'\n      ? define(definition)\n      : this[name] = definition()\n})('streamSaver', () => {\n  'use strict'\n\n  const global = typeof window === 'object' ? window : this\n  if (!global.HTMLElement) console.warn('streamsaver is meant to run on browsers main thread')\n\n  let mitmTransporter = null\n  let supportsTransferable = false\n  const test = fn => { try { fn() } catch (e) {} }\n  const ponyfill = global.WebStreamsPolyfill || {}\n  const isSecureContext = global.isSecureContext\n  // TODO: Must come up with a real detection test (#69)\n  let useBlobFallback = /constructor/i.test(global.HTMLElement) || !!global.safari || !!global.WebKitPoint\n  const downloadStrategy = isSecureContext || 'MozAppearance' in document.documentElement.style\n    ? 'iframe'\n    : 'navigate'\n\n  const streamSaver = {\n    createWriteStream,\n    WritableStream: global.WritableStream || ponyfill.WritableStream,\n    supported: true,\n    version: { full: '2.0.5', major: 2, minor: 0, dot: 5 },\n    mitm: 'https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0'\n  }\n\n  /**\n   * create a hidden iframe and append it to the DOM (body)\n   *\n   * @param  {string} src page to load\n   * @return {HTMLIFrameElement} page to load\n   */\n  function makeIframe (src) {\n    if (!src) throw new Error('meh')\n    const iframe = document.createElement('iframe')\n    iframe.hidden = true\n    iframe.src = src\n    iframe.loaded = false\n    iframe.name = 'iframe'\n    iframe.isIframe = true\n    iframe.postMessage = (...args) => iframe.contentWindow.postMessage(...args)\n    iframe.addEventListener('load', () => {\n      iframe.loaded = true\n    }, { once: true })\n    document.body.appendChild(iframe)\n    return iframe\n  }\n\n  /**\n   * create a popup that simulates the basic things\n   * of what a iframe can do\n   *\n   * @param  {string} src page to load\n   * @return {object}     iframe like object\n   */\n  function makePopup (src) {\n    const options = 'width=200,height=100'\n    const delegate = document.createDocumentFragment()\n    const popup = {\n      frame: global.open(src, 'popup', options),\n      loaded: false,\n      isIframe: false,\n      isPopup: true,\n      remove () { popup.frame.close() },\n      addEventListener (...args) { delegate.addEventListener(...args) },\n      dispatchEvent (...args) { delegate.dispatchEvent(...args) },\n      removeEventListener (...args) { delegate.removeEventListener(...args) },\n      postMessage (...args) { popup.frame.postMessage(...args) }\n    }\n\n    const onReady = evt => {\n      if (evt.source === popup.frame) {\n        popup.loaded = true\n        global.removeEventListener('message', onReady)\n        popup.dispatchEvent(new Event('load'))\n      }\n    }\n\n    global.addEventListener('message', onReady)\n\n    return popup\n  }\n\n  try {\n    // We can't look for service worker since it may still work on http\n    new Response(new ReadableStream())\n    if (isSecureContext && !('serviceWorker' in navigator)) {\n      useBlobFallback = true\n    }\n  } catch (err) {\n    useBlobFallback = true\n  }\n\n  test(() => {\n    // Transferable stream was first enabled in chrome v73 behind a flag\n    const { readable } = new TransformStream()\n    const mc = new MessageChannel()\n    mc.port1.postMessage(readable, [readable])\n    mc.port1.close()\n    mc.port2.close()\n    supportsTransferable = true\n    // Freeze TransformStream object (can only work with native)\n    Object.defineProperty(streamSaver, 'TransformStream', {\n      configurable: false,\n      writable: false,\n      value: TransformStream\n    })\n  })\n\n  function loadTransporter () {\n    if (!mitmTransporter) {\n      mitmTransporter = isSecureContext\n        ? makeIframe(streamSaver.mitm)\n        : makePopup(streamSaver.mitm)\n    }\n  }\n\n  /**\n   * @param  {string} filename filename that should be used\n   * @param  {object} options  [description]\n   * @param  {number} size     deprecated\n   * @return {WritableStream<Uint8Array>}\n   */\n  function createWriteStream (filename, options, size) {\n    let opts = {\n      size: null,\n      pathname: null,\n      writableStrategy: undefined,\n      readableStrategy: undefined\n    }\n\n    let bytesWritten = 0 // by StreamSaver.js (not the service worker)\n    let downloadUrl = null\n    let channel = null\n    let ts = null\n\n    // normalize arguments\n    if (Number.isFinite(options)) {\n      [ size, options ] = [ options, size ]\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else if (options && options.highWaterMark) {\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else {\n      opts = options || {}\n    }\n    if (!useBlobFallback) {\n      loadTransporter()\n\n      channel = new MessageChannel()\n\n      // Make filename RFC5987 compatible\n      filename = encodeURIComponent(filename.replace(/\\//g, ':'))\n        .replace(/['()]/g, escape)\n        .replace(/\\*/g, '%2A')\n\n      const response = {\n        transferringReadable: supportsTransferable,\n        pathname: opts.pathname || Math.random().toString().slice(-6) + '/' + filename,\n        headers: {\n          'Content-Type': 'application/octet-stream; charset=utf-8',\n          'Content-Disposition': \"attachment; filename*=UTF-8''\" + filename\n        }\n      }\n\n      if (opts.size) {\n        response.headers['Content-Length'] = opts.size\n      }\n\n      const args = [ response, '*', [ channel.port2 ] ]\n\n      if (supportsTransferable) {\n        const transformer = downloadStrategy === 'iframe' ? undefined : {\n          // This transformer & flush method is only used by insecure context.\n          transform (chunk, controller) {\n            if (!(chunk instanceof Uint8Array)) {\n              throw new TypeError('Can only write Uint8Arrays')\n            }\n            bytesWritten += chunk.length\n            controller.enqueue(chunk)\n\n            if (downloadUrl) {\n              location.href = downloadUrl\n              downloadUrl = null\n            }\n          },\n          flush () {\n            if (downloadUrl) {\n              location.href = downloadUrl\n            }\n          }\n        }\n        ts = new streamSaver.TransformStream(\n          transformer,\n          opts.writableStrategy,\n          opts.readableStrategy\n        )\n        const readableStream = ts.readable\n\n        channel.port1.postMessage({ readableStream }, [ readableStream ])\n      }\n\n      channel.port1.onmessage = evt => {\n        // Service worker sent us a link that we should open.\n        if (evt.data.download) {\n          // Special treatment for popup...\n          if (downloadStrategy === 'navigate') {\n            mitmTransporter.remove()\n            mitmTransporter = null\n            if (bytesWritten) {\n              location.href = evt.data.download\n            } else {\n              downloadUrl = evt.data.download\n            }\n          } else {\n            if (mitmTransporter.isPopup) {\n              mitmTransporter.remove()\n              mitmTransporter = null\n              // Special case for firefox, they can keep sw alive with fetch\n              if (downloadStrategy === 'iframe') {\n                makeIframe(streamSaver.mitm)\n              }\n            }\n\n            // We never remove this iframes b/c it can interrupt saving\n            makeIframe(evt.data.download)\n          }\n        } else if (evt.data.abort) {\n          chunks = []\n          channel.port1.postMessage('abort') //send back so controller is aborted\n          channel.port1.onmessage = null\n          channel.port1.close()\n          channel.port2.close()\n          channel = null\n        }\n      }\n\n      if (mitmTransporter.loaded) {\n        mitmTransporter.postMessage(...args)\n      } else {\n        mitmTransporter.addEventListener('load', () => {\n          mitmTransporter.postMessage(...args)\n        }, { once: true })\n      }\n    }\n\n    let chunks = []\n\n    return (!useBlobFallback && ts && ts.writable) || new streamSaver.WritableStream({\n      write (chunk) {\n        if (!(chunk instanceof Uint8Array)) {\n          throw new TypeError('Can only write Uint8Arrays')\n        }\n        if (useBlobFallback) {\n          // Safari... The new IE6\n          // https://github.com/jimmywarting/StreamSaver.js/issues/69\n          //\n          // even though it has everything it fails to download anything\n          // that comes from the service worker..!\n          chunks.push(chunk)\n          return\n        }\n\n        // is called when a new chunk of data is ready to be written\n        // to the underlying sink. It can return a promise to signal\n        // success or failure of the write operation. The stream\n        // implementation guarantees that this method will be called\n        // only after previous writes have succeeded, and never after\n        // close or abort is called.\n\n        // TODO: Kind of important that service worker respond back when\n        // it has been written. Otherwise we can't handle backpressure\n        // EDIT: Transferable streams solves this...\n        channel.port1.postMessage(chunk)\n        bytesWritten += chunk.length\n\n        if (downloadUrl) {\n          location.href = downloadUrl\n          downloadUrl = null\n        }\n      },\n      close () {\n        if (useBlobFallback) {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = filename\n          link.click()\n        } else {\n          channel.port1.postMessage('end')\n        }\n      },\n      abort () {\n        chunks = []\n        channel.port1.postMessage('abort')\n        channel.port1.onmessage = null\n        channel.port1.close()\n        channel.port2.close()\n        channel = null\n      }\n    }, opts.writableStrategy)\n  }\n\n  return streamSaver\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const supportedUnit = [\n\t{ unit: \"mm\", multipleToInches: 25.4, label: \"millimeters\" },\n\t{ unit: \"cm\", multipleToInches: 2.54, label: \"centimeters\" },\n\t{ unit: \"dm\", multipleToInches: 0.254, label: \"decimeters\" },\n\t{ unit: \"m\", multipleToInches: 0.0254, label: \"meters\" },\n\t{ unit: \"in\", multipleToInches: 1, label: \"inches\" },\n];\nexport const convertPixelsToUnit = ({ unit, width, height, dpi, ratio }) => {\n\tlet multipleToInches = 1;\n\tfor (let i in supportedUnit) {\n\t\tif (unit == supportedUnit[i].unit) {\n\t\t\tmultipleToInches = supportedUnit[i].multipleToInches;\n\t\t\tbreak;\n\t\t}\n\t}\n\twidth = (width / multipleToInches) * dpi;\n\theight = (height / multipleToInches) * dpi;\n\n\tratio = width / height;\n\n\treturn [width, height, ratio];\n};\n","const setDisplaySize = (ratio, parentContainer) => {\n\tconst parentStyle = getComputedStyle(parentContainer);\n\tconst parentWidth = parseFloat(parentStyle.width);\n\n\tlet parentHeight = parseFloat(parentStyle.height);\n\tconst windowWidth = window.innerWidth;\n\tconst windowHeight = window.innerHeight;\n\n\tif (parentHeight == 0) {\n\t\tparentContainer.style.height = window.innerHeight + \"px\";\n\t\tparentContainer.style.overflowY = \"hidden\";\n\t\tparentHeight = parentContainer.offsetHeight;\n\t}\n\n\tsetDefaultsParamsForWindow();\n\tlet displayWidth, displayHeight;\n\n\tdisplayHeight = Math.min(windowHeight, parentHeight);\n\tdisplayWidth = displayHeight * ratio;\n\n\tif (displayWidth > windowWidth) {\n\t\tdisplayWidth = Math.min(windowWidth, parentWidth);\n\t\tdisplayHeight = displayWidth / ratio;\n\t}\n\n\treturn { width: displayWidth, height: displayHeight };\n};\n\nconst setDefaultsParamsForWindow = () => {\n\tdocument.body.style.minHeight = window.innerHeight;\n\tdocument.body.style.minWidth = window.innerWidth;\n};\nexport default setDisplaySize;\n","import { convertPixelsToUnit } from \"../../utils/pixelsToUnit\";\nimport convertInputSizeToPixels from \"./convertInputSizeToPixels\";\nimport setDisplaySize from \"./setDisplaySize\";\n\nconst Size = (\n\tprops = { width, height, CANVASP, container, unit, dpi, ratio }\n) => {\n\tlet settings = { ...props, widthInPixels: 0, heightInPixels: 0 };\n\tconst CANVASP = settings.CANVASP;\n\tconst setSize = () => {\n\t\tconst displaySize = calcSize();\n\t\tCANVASP.width = settings.widthInPixels;\n\t\tCANVASP.height = settings.heightInPixels;\n\t\tCANVASP.style.width = displaySize.width + \"px\";\n\t\tCANVASP.style.height = displaySize.height + \"px\";\n\t};\n\n\tconst calcSize = () => {\n\t\t[settings.widthInPixels, settings.heightInPixels, settings.ratio] =\n\t\t\tconvertPixelsToUnit({\n\t\t\t\t...settings,\n\t\t\t});\n\t\tconst displaySize = setDisplaySize(settings.ratio, settings.container);\n\t\treturn displaySize;\n\t};\n\n\tconst getCanvasSize = () => {\n\t\treturn { width: settings.widthInPixels, height: settings.heightInPixels };\n\t};\n\n\tconst init = () => {};\n\treturn { init, setSize, getCanvasSize };\n};\nexport default Size;\n","export default {\n\t//Size\n\tp5Mode: false,\n\telem: document.createElement(\"canvas\"),\n\twidth: 210,\n\theight: 297,\n\tdpi: 300,\n\twidthInPixels: null,\n\theightInPixels: null,\n\tunit: \"mm\",\n\tratio: null,\n\tmode: \"picture\",\n\t//container options\n\tcontainer: document.body,\n\tid: \"canvas-for-print\",\n\tpixelDensity: window.devicePixelRatio,\n\tcontext: \"2d\",\n\n\t//options\n\tbleeds: false,\n};\n","import streamSaver from \"streamsaver\";\n\nexport const saveFile = async () => {\n\tconsole.log(\"Enter in save File\");\n\tconst canvas = document.getElementById(\"canvas-for-print\");\n\treturn new Promise((resolve, reject) => {\n\t\tcanvas.toBlob((blobCanvas) => {\n\t\t\t// document.body.appendChild(newImg);\n\t\t\tconst blob = new Blob([blobCanvas], { type: \"image/png\" });\n\t\t\tconst fileStream = streamSaver.createWriteStream(\"sample.png\", {\n\t\t\t\tsize: blob.size, // Makes the percentage visiable in the download\n\t\t\t});\n\t\t\tconst readableStream = blob.stream();\n\n\t\t\t// more optimized pipe version\n\t\t\t// (Safari may have pipeTo but it's useless without the WritableStream)\n\t\t\tif (window.WritableStream && readableStream.pipeTo) {\n\t\t\t\treturn readableStream.pipeTo(fileStream).then(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t\tconsole.log(\"it's done\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Write (pipe) manually\n\t\t\twindow.writer = fileStream.getWriter();\n\n\t\t\tconst reader = readableStream.getReader();\n\t\t\tconst pump = () =>\n\t\t\t\treader\n\t\t\t\t\t.read()\n\t\t\t\t\t.then((res) =>\n\t\t\t\t\t\tres.done ? writer.close() : writer.write(res.value).then(pump)\n\t\t\t\t\t);\n\n\t\t\t// pump();\n\t\t});\n\t});\n};\n","import { saveFile } from \"../core/saveFile/saveFile\";\n// import \"./style.css\";\n\nexport const Container = () => {\n\tconst container = document.createElement(\"div\");\n\tconst button = document.createElement(\"button\");\n\tconst infosContainer = document.createElement(\"div\");\n\tconst saveButton = document.createElement(\"button\");\n\tlet isHidden = false;\n\tif (isHidden) {\n\t\tcontainer.classList.add(\"hide\");\n\t}\n\n\tconst initListener = () => {\n\t\tbutton.addEventListener(\"click\", onClickHandler);\n\t\tbutton.addEventListener(\"mouseenter\", onMouseEnterHandler);\n\t\tbutton.addEventListener(\"mouseleave\", onMouseLeaveHandler);\n\t};\n\tconst init = () => {\n\t\tdocument.body.appendChild(container);\n\t\tcontainer.appendChild(infosContainer);\n\t\tcontainer.appendChild(button);\n\t\tcontainer.appendChild(saveButton);\n\t\tbutton.setAttribute(\"id\", \"canvaspdflib_gui-display-button\");\n\t\tcontainer.setAttribute(\"id\", \"gui-container\");\n\t\tinfosContainer.setAttribute(\"id\", \"canvaspdflib_gui-infos-container\");\n\t\tsaveButton.setAttribute(\"id\", \"canvaspdflib_gui-save-button\");\n\t\tbutton.innerHTML = \"<div><p>open</p></div>\";\n\t\tsaveButton.innerHTML = \"<p>save</p>\";\n\t\tinitListener();\n\t};\n\n\tconst onMouseEnterHandler = () => {\n\t\tisHidden ? container.classList.add(\"canvaspdflib_button-is-hover\") : \"\";\n\t};\n\n\tconst onMouseLeaveHandler = () => {\n\t\tif (isHidden) {\n\t\t\tconst elems = document.getElementsByClassName(\n\t\t\t\t\"canvaspdflib_button-is-hover\"\n\t\t\t);\n\t\t\tif (elems.length > 0) {\n\t\t\t\tfor (let elem in elems) {\n\t\t\t\t\tif (typeof elems[elem] == \"object\") {\n\t\t\t\t\t\telems[elem].classList.remove(\"canvaspdflib_button-is-hover\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst update = ({ ...settings }) => {\n\t\tdisplay(settings);\n\t};\n\n\tconst display = (settings) => {\n\t\tinfosContainer.innerHTML =\n\t\t\t\"<p> \" +\n\t\t\tsettings.width +\n\t\t\t\" \" +\n\t\t\tsettings.unit +\n\t\t\t\" Ã \" +\n\t\t\tsettings.height +\n\t\t\t\" \" +\n\t\t\tsettings.unit +\n\t\t\t\"<br/>\" +\n\t\t\tsettings.dpi +\n\t\t\t\" dpi</p>\";\n\t};\n\n\tconst onClickHandler = () => {\n\t\tif (isHidden) {\n\t\t\tcontainer.classList.remove(\"hide\");\n\t\t\tsetTimeout(() => {\n\t\t\t\tbutton.innerHTML = \"<div><p>close</p></div>\";\n\t\t\t}, 250);\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tbutton.innerHTML = \"<div><p>open</p></div>\";\n\t\t\t}, 250);\n\t\t\tcontainer.classList.add(\"hide\");\n\t\t}\n\n\t\tisHidden = !isHidden;\n\t};\n\tinit();\n\n\treturn { init, update, saveButton };\n};\n","/****** \n * \n@param {object} userSettings - Insert your settings\n@param {number} userSettings.width - width of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.height -  height of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.dpi -  resolution of the canvas in dpi (default: 300)\n@param {string} userSettings.unit -  unit of measure of the canvas (default: mm)\n@param {object} userSettings.container -  container of your object\n\n@param {boolean} PARAMS.options.bleeds - define if you want some bleeds or not\n * \n * ******/\n\n// https://github.com/ertdfgcvb/Sequencer/blob/master/src/sequencer.js\n\n// import { saveFile } from \"./core/saveFile/saveFile\";\nimport Size from \"./core/size\";\nimport defaults from \"./defaults.js\";\nimport { Container } from \"./UI\";\n\nexport const canvasForPrint = (userSettings) => {\n\tlet settings = { ...defaults, ...userSettings };\n\tconst CANVASP = settings.elem;\n\tconst GUI = Container();\n\tconst saveFileButton = GUI.saveButton;\n\tconst ctx = CANVASP.getContext(settings.context);\n\tconst events = [];\n\n\tconst on = (eventName, fn) => {\n\t\tif (!events[eventName]) {\n\t\t\tevents[eventName] = [];\n\t\t}\n\t\tevents[eventName].push(fn);\n\t\treturn () => {\n\t\t\tevents[eventName] = events[eventName].filter((eventFn) => fn !== eventFn);\n\t\t};\n\t};\n\tconst emit = (eventName, data) => {\n\t\tconst event = events[eventName];\n\t\tif (event) {\n\t\t\tevent.forEach((fn) => {\n\t\t\t\tfn.call(null, data);\n\t\t\t});\n\t\t}\n\t\tconsole.log(events);\n\t};\n\n\tconst size = Size({\n\t\twidth: settings.width,\n\t\theight: settings.height,\n\t\tunit: settings.unit,\n\t\tdpi: settings.dpi,\n\t\tratio: settings.ratio,\n\t\tCANVASP,\n\t\tcontainer: settings.container,\n\t});\n\n\tconst initListener = () => {\n\t\tsaveFileButton.addEventListener(\"click\", saveFileHandler);\n\t};\n\tconst saveFileHandler = async () => {\n\t\temit(\"startSaving\", \"hello\");\n\t\tawait saveFile();\n\t\temit(\"saved\", \"hello\");\n\t};\n\n\tconst init = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\tcreate();\n\t\tGUI.init();\n\t\tGUI.update({ ...settings });\n\t\tinitListener();\n\t\treturn { ...settings };\n\t};\n\n\tconst create = () => {\n\t\tCANVASP.id = settings.id;\n\t\tsettings.container.appendChild(CANVASP);\n\t};\n\n\twindow.onresize = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\tGUI.update({ ...settings });\n\t};\n\tinit();\n\n\treturn {\n\t\t...settings,\n\t\ton,\n\t\tctx,\n\t};\n};\n"],"names":["root","factory","exports","module","define","amd","this","definition","global","window","HTMLElement","console","warn","mitmTransporter","supportsTransferable","ponyfill","WebStreamsPolyfill","isSecureContext","useBlobFallback","test","safari","WebKitPoint","downloadStrategy","document","documentElement","style","streamSaver","createWriteStream","filename","options","size","opts","pathname","writableStrategy","undefined","readableStrategy","bytesWritten","downloadUrl","channel","ts","Number","isFinite","highWaterMark","makeIframe","mitm","src","delegate","createDocumentFragment","popup","frame","open","loaded","isIframe","isPopup","remove","close","addEventListener","args","dispatchEvent","removeEventListener","postMessage","onReady","evt","source","Event","makePopup","MessageChannel","encodeURIComponent","replace","escape","response","transferringReadable","Math","random","toString","slice","headers","port2","transformer","transform","chunk","controller","Uint8Array","TypeError","length","enqueue","location","href","flush","TransformStream","readableStream","readable","port1","onmessage","data","download","abort","chunks","once","writable","WritableStream","write","push","blob","Blob","type","link","createElement","URL","createObjectURL","click","supported","version","full","major","minor","dot","Error","iframe","hidden","name","contentWindow","body","appendChild","Response","ReadableStream","navigator","err","fn","mc","Object","defineProperty","configurable","value","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","key","o","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","supportedUnit","unit","multipleToInches","label","ratio","parentContainer","parentStyle","getComputedStyle","parentWidth","parseFloat","width","parentHeight","height","windowWidth","innerWidth","windowHeight","innerHeight","displayWidth","displayHeight","overflowY","offsetHeight","minHeight","minWidth","min","props","CANVASP","container","dpi","settings","widthInPixels","heightInPixels","init","setSize","displaySize","i","getCanvasSize","p5Mode","elem","mode","id","pixelDensity","devicePixelRatio","context","bleeds","Container","button","infosContainer","saveButton","isHidden","classList","add","setAttribute","innerHTML","onClickHandler","onMouseEnterHandler","onMouseLeaveHandler","elems","getElementsByClassName","setTimeout","update","display","canvasForPrint","userSettings","defaults","GUI","saveFileButton","ctx","getContext","events","emit","eventName","event","forEach","log","saveFileHandler","async","saveFile","onresize","on","filter","eventFn"],"sourceRoot":""}