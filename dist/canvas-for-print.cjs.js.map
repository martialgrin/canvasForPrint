{"version":3,"file":"canvas-for-print.cjs.js","sources":["../node_modules/streamsaver/StreamSaver.js","../lib/core/saveFile/saveFile.js","../lib/core/saveFile/saveFileHandler.js","../lib/core/size/convertInputSizeToPixels.js","../lib/core/size/index.js","../lib/core/size/setDisplaySize.js","../lib/defaults.js","../lib/UI/saveGUI.js","../lib/UI/GUI.js","../lib/UI/settingsGUI.js","../lib/index.js"],"sourcesContent":["/*! streamsaver. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\n/* global chrome location ReadableStream define MessageChannel TransformStream */\n\n;((name, definition) => {\n  typeof module !== 'undefined'\n    ? module.exports = definition()\n    : typeof define === 'function' && typeof define.amd === 'object'\n      ? define(definition)\n      : this[name] = definition()\n})('streamSaver', () => {\n  'use strict'\n\n  const global = typeof window === 'object' ? window : this\n  if (!global.HTMLElement) console.warn('streamsaver is meant to run on browsers main thread')\n\n  let mitmTransporter = null\n  let supportsTransferable = false\n  const test = fn => { try { fn() } catch (e) {} }\n  const ponyfill = global.WebStreamsPolyfill || {}\n  const isSecureContext = global.isSecureContext\n  // TODO: Must come up with a real detection test (#69)\n  let useBlobFallback = /constructor/i.test(global.HTMLElement) || !!global.safari || !!global.WebKitPoint\n  const downloadStrategy = isSecureContext || 'MozAppearance' in document.documentElement.style\n    ? 'iframe'\n    : 'navigate'\n\n  const streamSaver = {\n    createWriteStream,\n    WritableStream: global.WritableStream || ponyfill.WritableStream,\n    supported: true,\n    version: { full: '2.0.5', major: 2, minor: 0, dot: 5 },\n    mitm: 'https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0'\n  }\n\n  /**\n   * create a hidden iframe and append it to the DOM (body)\n   *\n   * @param  {string} src page to load\n   * @return {HTMLIFrameElement} page to load\n   */\n  function makeIframe (src) {\n    if (!src) throw new Error('meh')\n    const iframe = document.createElement('iframe')\n    iframe.hidden = true\n    iframe.src = src\n    iframe.loaded = false\n    iframe.name = 'iframe'\n    iframe.isIframe = true\n    iframe.postMessage = (...args) => iframe.contentWindow.postMessage(...args)\n    iframe.addEventListener('load', () => {\n      iframe.loaded = true\n    }, { once: true })\n    document.body.appendChild(iframe)\n    return iframe\n  }\n\n  /**\n   * create a popup that simulates the basic things\n   * of what a iframe can do\n   *\n   * @param  {string} src page to load\n   * @return {object}     iframe like object\n   */\n  function makePopup (src) {\n    const options = 'width=200,height=100'\n    const delegate = document.createDocumentFragment()\n    const popup = {\n      frame: global.open(src, 'popup', options),\n      loaded: false,\n      isIframe: false,\n      isPopup: true,\n      remove () { popup.frame.close() },\n      addEventListener (...args) { delegate.addEventListener(...args) },\n      dispatchEvent (...args) { delegate.dispatchEvent(...args) },\n      removeEventListener (...args) { delegate.removeEventListener(...args) },\n      postMessage (...args) { popup.frame.postMessage(...args) }\n    }\n\n    const onReady = evt => {\n      if (evt.source === popup.frame) {\n        popup.loaded = true\n        global.removeEventListener('message', onReady)\n        popup.dispatchEvent(new Event('load'))\n      }\n    }\n\n    global.addEventListener('message', onReady)\n\n    return popup\n  }\n\n  try {\n    // We can't look for service worker since it may still work on http\n    new Response(new ReadableStream())\n    if (isSecureContext && !('serviceWorker' in navigator)) {\n      useBlobFallback = true\n    }\n  } catch (err) {\n    useBlobFallback = true\n  }\n\n  test(() => {\n    // Transferable stream was first enabled in chrome v73 behind a flag\n    const { readable } = new TransformStream()\n    const mc = new MessageChannel()\n    mc.port1.postMessage(readable, [readable])\n    mc.port1.close()\n    mc.port2.close()\n    supportsTransferable = true\n    // Freeze TransformStream object (can only work with native)\n    Object.defineProperty(streamSaver, 'TransformStream', {\n      configurable: false,\n      writable: false,\n      value: TransformStream\n    })\n  })\n\n  function loadTransporter () {\n    if (!mitmTransporter) {\n      mitmTransporter = isSecureContext\n        ? makeIframe(streamSaver.mitm)\n        : makePopup(streamSaver.mitm)\n    }\n  }\n\n  /**\n   * @param  {string} filename filename that should be used\n   * @param  {object} options  [description]\n   * @param  {number} size     deprecated\n   * @return {WritableStream<Uint8Array>}\n   */\n  function createWriteStream (filename, options, size) {\n    let opts = {\n      size: null,\n      pathname: null,\n      writableStrategy: undefined,\n      readableStrategy: undefined\n    }\n\n    let bytesWritten = 0 // by StreamSaver.js (not the service worker)\n    let downloadUrl = null\n    let channel = null\n    let ts = null\n\n    // normalize arguments\n    if (Number.isFinite(options)) {\n      [ size, options ] = [ options, size ]\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else if (options && options.highWaterMark) {\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else {\n      opts = options || {}\n    }\n    if (!useBlobFallback) {\n      loadTransporter()\n\n      channel = new MessageChannel()\n\n      // Make filename RFC5987 compatible\n      filename = encodeURIComponent(filename.replace(/\\//g, ':'))\n        .replace(/['()]/g, escape)\n        .replace(/\\*/g, '%2A')\n\n      const response = {\n        transferringReadable: supportsTransferable,\n        pathname: opts.pathname || Math.random().toString().slice(-6) + '/' + filename,\n        headers: {\n          'Content-Type': 'application/octet-stream; charset=utf-8',\n          'Content-Disposition': \"attachment; filename*=UTF-8''\" + filename\n        }\n      }\n\n      if (opts.size) {\n        response.headers['Content-Length'] = opts.size\n      }\n\n      const args = [ response, '*', [ channel.port2 ] ]\n\n      if (supportsTransferable) {\n        const transformer = downloadStrategy === 'iframe' ? undefined : {\n          // This transformer & flush method is only used by insecure context.\n          transform (chunk, controller) {\n            if (!(chunk instanceof Uint8Array)) {\n              throw new TypeError('Can only write Uint8Arrays')\n            }\n            bytesWritten += chunk.length\n            controller.enqueue(chunk)\n\n            if (downloadUrl) {\n              location.href = downloadUrl\n              downloadUrl = null\n            }\n          },\n          flush () {\n            if (downloadUrl) {\n              location.href = downloadUrl\n            }\n          }\n        }\n        ts = new streamSaver.TransformStream(\n          transformer,\n          opts.writableStrategy,\n          opts.readableStrategy\n        )\n        const readableStream = ts.readable\n\n        channel.port1.postMessage({ readableStream }, [ readableStream ])\n      }\n\n      channel.port1.onmessage = evt => {\n        // Service worker sent us a link that we should open.\n        if (evt.data.download) {\n          // Special treatment for popup...\n          if (downloadStrategy === 'navigate') {\n            mitmTransporter.remove()\n            mitmTransporter = null\n            if (bytesWritten) {\n              location.href = evt.data.download\n            } else {\n              downloadUrl = evt.data.download\n            }\n          } else {\n            if (mitmTransporter.isPopup) {\n              mitmTransporter.remove()\n              mitmTransporter = null\n              // Special case for firefox, they can keep sw alive with fetch\n              if (downloadStrategy === 'iframe') {\n                makeIframe(streamSaver.mitm)\n              }\n            }\n\n            // We never remove this iframes b/c it can interrupt saving\n            makeIframe(evt.data.download)\n          }\n        } else if (evt.data.abort) {\n          chunks = []\n          channel.port1.postMessage('abort') //send back so controller is aborted\n          channel.port1.onmessage = null\n          channel.port1.close()\n          channel.port2.close()\n          channel = null\n        }\n      }\n\n      if (mitmTransporter.loaded) {\n        mitmTransporter.postMessage(...args)\n      } else {\n        mitmTransporter.addEventListener('load', () => {\n          mitmTransporter.postMessage(...args)\n        }, { once: true })\n      }\n    }\n\n    let chunks = []\n\n    return (!useBlobFallback && ts && ts.writable) || new streamSaver.WritableStream({\n      write (chunk) {\n        if (!(chunk instanceof Uint8Array)) {\n          throw new TypeError('Can only write Uint8Arrays')\n        }\n        if (useBlobFallback) {\n          // Safari... The new IE6\n          // https://github.com/jimmywarting/StreamSaver.js/issues/69\n          //\n          // even though it has everything it fails to download anything\n          // that comes from the service worker..!\n          chunks.push(chunk)\n          return\n        }\n\n        // is called when a new chunk of data is ready to be written\n        // to the underlying sink. It can return a promise to signal\n        // success or failure of the write operation. The stream\n        // implementation guarantees that this method will be called\n        // only after previous writes have succeeded, and never after\n        // close or abort is called.\n\n        // TODO: Kind of important that service worker respond back when\n        // it has been written. Otherwise we can't handle backpressure\n        // EDIT: Transferable streams solves this...\n        channel.port1.postMessage(chunk)\n        bytesWritten += chunk.length\n\n        if (downloadUrl) {\n          location.href = downloadUrl\n          downloadUrl = null\n        }\n      },\n      close () {\n        if (useBlobFallback) {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = filename\n          link.click()\n        } else {\n          channel.port1.postMessage('end')\n        }\n      },\n      abort () {\n        chunks = []\n        channel.port1.postMessage('abort')\n        channel.port1.onmessage = null\n        channel.port1.close()\n        channel.port2.close()\n        channel = null\n      }\n    }, opts.writableStrategy)\n  }\n\n  return streamSaver\n})\n","import * as StreamSaver from \"streamsaver\";\n\nexport const saveFile = async (fileName, canvasToSave) => {\n\tconst canvas = canvasToSave;\n\treturn new Promise((resolve, reject) => {\n\t\tcanvas.toBlob((blobCanvas) => {\n\t\t\t// document.body.appendChild(newImg);\n\t\t\tconst blob = new Blob([blobCanvas], { type: \"image/png\" });\n\t\t\tconst fileStream = StreamSaver.createWriteStream(fileName + \".png\", {\n\t\t\t\tsize: blob.size, // Makes the percentage visiable in the download\n\t\t\t});\n\t\t\tconst readableStream = blob.stream();\n\n\t\t\t// more optimized pipe version\n\t\t\t// (Safari may have pipeTo but it's useless without the WritableStream)\n\t\t\tif (window.WritableStream && readableStream.pipeTo) {\n\t\t\t\treturn readableStream.pipeTo(fileStream).then(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Write (pipe) manually\n\t\t\twindow.writer = fileStream.getWriter();\n\n\t\t\tconst reader = readableStream.getReader();\n\t\t\tconst pump = () =>\n\t\t\t\treader\n\t\t\t\t\t.read()\n\t\t\t\t\t.then((res) =>\n\t\t\t\t\t\tres.done ? writer.close() : writer.write(res.value).then(pump)\n\t\t\t\t\t);\n\n\t\t\tpump();\n\t\t});\n\t});\n};\n","import { saveFile } from \"./saveFile\";\n\nexport const saveFileHandler = ({ settings }) => {\n\tlet prefix = settings.fileName;\n\tlet currentFrame = settings.recordingFrames.current;\n\tconst startFrame = settings.recordingFrames.start;\n\tconst endFrame = settings.recordingFrames.end;\n\n\tconst setFileName = (newFileName) => {\n\t\tprefix = newFileName;\n\t};\n\n\tconst sequenceMode = async () => {\n\t\tconst fileName = prefix + \"-\" + currentFrame;\n\t\tconst beforeRecording = async () => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcurrentFrame += 1;\n\t\t\t\t\tresolve(\"goToNextFrame\");\n\t\t\t\t}, 1000 / 60);\n\t\t\t});\n\t\t};\n\n\t\tconst savingFile = async () => {\n\t\t\tawait saveFile(fileName, settings.elem);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (currentFrame >= endFrame) {\n\t\t\t\t\t\tcurrentFrame = 0;\n\t\t\t\t\t\tresolve(\"saved\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentFrame++;\n\t\t\t\t\t\tresolve(\"saveNextFrame\");\n\t\t\t\t\t}\n\t\t\t\t}, settings.timeoutBetweenSavingFrames);\n\t\t\t});\n\t\t};\n\n\t\tif (currentFrame < startFrame) {\n\t\t\tconst val = await beforeRecording();\n\t\t\treturn { state: val, currentFrame: currentFrame };\n\t\t} else if (currentFrame >= startFrame && currentFrame <= endFrame) {\n\t\t\tconst val = await savingFile();\n\t\t\treturn { state: val, currentFrame: currentFrame };\n\t\t}\n\t};\n\n\tconst pictureMode = async () => {\n\t\tawait saveFile(prefix, settings.elem);\n\t\treturn { state: \"saved\" };\n\t};\n\n\treturn { pictureMode, sequenceMode, setFileName };\n};\n","const supportedUnit = [\n\t{ unit: \"mm\", multipleToInches: 25.4, label: \"millimeters\" },\n\t{ unit: \"cm\", multipleToInches: 2.54, label: \"centimeters\" },\n\t{ unit: \"dm\", multipleToInches: 0.254, label: \"decimeters\" },\n\t{ unit: \"m\", multipleToInches: 0.0254, label: \"meters\" },\n\t{ unit: \"in\", multipleToInches: 1, label: \"inches\" },\n];\nexport const convertPixelsToUnit = ({ unit, width, height, ppi, ratio }) => {\n\tlet multipleToInches = 1;\n\tfor (let i in supportedUnit) {\n\t\tif (unit == supportedUnit[i].unit) {\n\t\t\tmultipleToInches = supportedUnit[i].multipleToInches;\n\t\t\tbreak;\n\t\t}\n\t}\n\twidth = (width / multipleToInches) * ppi;\n\theight = (height / multipleToInches) * ppi;\n\n\tratio = width / height;\n\n\treturn [width, height, ratio];\n};\n\n// const convertInputSizeToPixels = ({ width, height }) => {\n// \tconst [widthInPixels, heightInPixels, ratio] = convertPixelsToUnit({\n// \t\twidth,\n// \t\theight,\n// \t});\n// \treturn { widthInPixels, heightInPixels, ratio };\n// };\n\n// export default convertInputSizeToPixels;\n","// import { convertPixelsToUnit } from \"../../utils/pixelsToUnit\";\nimport { convertPixelsToUnit } from \"./convertInputSizeToPixels\";\nimport setDisplaySize from \"./setDisplaySize\";\n\nconst Size = (props) => {\n\tlet settings = { ...props, widthInPixels: 0, heightInPixels: 0 };\n\tconst CANVASP = settings.elem;\n\tlet displaySize;\n\tconst setSize = () => {\n\t\tdisplaySize = calcSize();\n\t\tCANVASP.width = settings.widthInPixels;\n\t\tCANVASP.height = settings.heightInPixels;\n\t\tCANVASP.style.width = displaySize.width + \"px\";\n\t\tCANVASP.style.height = displaySize.height + \"px\";\n\t};\n\n\tconst calcSize = () => {\n\t\t[settings.widthInPixels, settings.heightInPixels, settings.ratio] =\n\t\t\tconvertPixelsToUnit({\n\t\t\t\t...settings,\n\t\t\t});\n\t\tconst displaySize = setDisplaySize(settings.ratio, settings.container);\n\t\treturn displaySize;\n\t};\n\n\tconst getCanvasSize = () => {\n\t\treturn { width: settings.widthInPixels, height: settings.heightInPixels };\n\t};\n\n\tconst getCanvasStyleSize = () => {\n\t\tdisplaySize = calcSize();\n\t\treturn { width: displaySize.width, height: displaySize.height };\n\t};\n\n\treturn { setSize, getCanvasSize, getCanvasStyleSize };\n};\nexport default Size;\n","const setDisplaySize = (ratio, parentContainer) => {\n\tconst parentStyle = getComputedStyle(parentContainer);\n\tconst parentWidth = parseFloat(parentStyle.width);\n\tlet parentHeight =\n\t\tparseFloat(parentStyle.height) -\n\t\tNumber(parentStyle.paddingBottom.match(\"[0-9.]*\")) -\n\t\tNumber(parentStyle.paddingTop.match(\"[0-9.]*\"));\n\tconst windowWidth = window.innerWidth;\n\tconst windowHeight = window.innerHeight;\n\n\tparentHeight =\n\t\twindowHeight -\n\t\tNumber(parentStyle.paddingBottom.match(\"[0-9.]*\")) -\n\t\tNumber(parentStyle.paddingTop.match(\"[0-9.]*\"));\n\tparentContainer.style.height = \"100%\";\n\tparentContainer.style.overflowY = \"hidden\";\n\n\t// setDefaultsParamsForWindow();\n\tlet displayWidth, displayHeight;\n\n\tdisplayHeight = Math.min(windowHeight, parentHeight);\n\tdisplayWidth = displayHeight * ratio;\n\n\tif (displayWidth > windowWidth) {\n\t\tdisplayWidth = Math.min(windowWidth, parentWidth);\n\t\tdisplayHeight = displayWidth / ratio;\n\t}\n\n\treturn { width: displayWidth, height: displayHeight };\n};\n\nconst setDefaultsParamsForWindow = () => {\n\tdocument.body.style.minHeight = window.innerHeight;\n\tdocument.body.style.minWidth = window.innerWidth;\n};\nexport default setDisplaySize;\n","export default {\n\t//Size\n\tp5Mode: false,\n\telem: document.createElement(\"canvas\"),\n\twidth: 210,\n\theight: 297,\n\tppi: 300,\n\twidthInPixels: null,\n\theightInPixels: null,\n\tunit: \"mm\",\n\tratio: null,\n\tmode: \"picture\",\n\trecordingFrames: { start: 0, end: 100, current: 0 },\n\t//container options\n\tcontainer: document.body,\n\tid: \"canvas-for-print\",\n\tpixelDensity: window.devicePixelRatio,\n\tcontext: \"2d\",\n\ttimeoutBetweenSavingFrames: 100,\n\tfileName: \"test\",\n};\n","export const saveGUI = ({ startFrame, endFrame, mode }) => {\n\tconst saveButton = document.createElement(\"button\");\n\tsaveButton.classList.add(\"canvas-for-print_gui-inner-container\");\n\tsaveButton.setAttribute(\"id\", \"canvas-for-print_gui-save\");\n\tconst numFramesToSave = endFrame - startFrame + 1;\n\tlet currentFrame = 0;\n\n\tconst spinner =\n\t\t\"<div id='canvas-for-print_gui-is-downloading'><div class='spinner'><div class='bounce1'></div><div class='bounce2'></div><div class='bounce3'></div></div>\";\n\tconst notClickedContent =\n\t\t\"<svg width='0.9rem' height='0.9rem' viewBox='0 0 224 224' fill='none'><path fill-rule='evenodd' clip-rule='evenodd' d='M67.2 5.6V61.6C67.2 64.69 69.71 67.2 72.8 67.2H151.2C154.29 67.2 156.8 64.69 156.8 61.6V5.6C156.8 2.51 159.31 0 162.4 0H172.24C176.69 0 180.97 1.77 184.12 4.92L219.08 39.88C222.23 43.03 224 47.31 224 51.76V207.2C224 216.48 216.48 224 207.2 224H16.8C7.52 224 0 216.48 0 207.2V16.8C0 7.52 7.52 0 16.8 0H61.6C64.69 0 67.2 2.51 67.2 5.6ZM117.6 0H128.8C131.89 0 134.4 2.51 134.4 5.6V39.2C134.4 42.29 131.9 44.8 128.8 44.8H117.6C114.51 44.8 112 42.29 112 39.2V5.6C112 2.51 114.51 0 117.6 0ZM22.4 95.2V196C22.4 199.09 24.91 201.6 28 201.6H196C199.09 201.6 201.6 199.09 201.6 196V95.2C201.6 92.11 199.09 89.6 196 89.6H28C24.91 89.6 22.4 92.1 22.4 95.2Z' fill='white'/></svg>\";\n\tconst numFramesContainer =\n\t\t\"<p> <span id='canvas-for-print_current-frame'>\" +\n\t\tcurrentFrame +\n\t\t\"</span> / \" +\n\t\tnumFramesToSave +\n\t\t\"</p>\";\n\tconst abortButton = \"<button id='canvas-for-print_gui-abort'>abort</button>\";\n\tconst isDownloading = () => {\n\t\tsaveButton.style.backgroundColor = \"#00f\";\n\t\tif (mode === \"sequence\") {\n\t\t\treturn spinner + numFramesContainer + abortButton;\n\t\t} else {\n\t\t\treturn spinner;\n\t\t}\n\t};\n\n\tconst finished = () => {\n\t\tsaveButton.style.backgroundColor = \"#0f0\";\n\t\treturn \"<span>finished</span>\";\n\t};\n\tconst isDownloaded = () => {\n\t\tcurrentFrame = 0;\n\t\tsaveButton.style.backgroundColor = \"#000\";\n\t\treturn notClickedContent;\n\t};\n\tconst updateNumFrame = (numFrame) => {\n\t\tif (mode === \"sequence\") {\n\t\t\tcurrentFrame++;\n\t\t\tconst elem = document.getElementById(\"canvas-for-print_current-frame\");\n\t\t\tif (typeof elem != \"undefined\") {\n\t\t\t\telem.innerText = currentFrame;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tisDownloaded,\n\t\tisDownloading,\n\t\tupdateNumFrame,\n\t\tsaveButton,\n\t\tfinished,\n\t};\n};\n","import { saveFile } from \"../core/saveFile/saveFile\";\nimport { saveGUI } from \"./saveGUI\";\nimport { settingsGUI } from \"./settingsGUI\";\nimport \"./style.scss\";\n\nexport const GUI = ({ settings }) => {\n\tconst container = document.createElement(\"div\");\n\tconst savingContainer = saveGUI({\n\t\tstartFrame: settings.recordingFrames.start,\n\t\tendFrame: settings.recordingFrames.end,\n\t\tmode: settings.mode,\n\t});\n\tconst saveButton = savingContainer.saveButton;\n\tconst settingsDisplay = settingsGUI({ container, settings });\n\n\tconst init = (saveCanvasFn) => {\n\t\tinitListener(saveCanvasFn);\n\t\tdocument.body.appendChild(container);\n\t\tsettingsDisplay.settingsButton();\n\t\tsettingsDisplay.infos();\n\t\tcontainer.appendChild(saveButton);\n\t\tsaveButton.innerHTML = savingContainer.isDownloaded();\n\t\tcontainer.setAttribute(\"id\", \"canvas-for-print_gui-container\");\n\t};\n\n\tconst initListener = (saveCanvasFn) => {\n\t\tsaveButton.addEventListener(\"click\", saveCanvasFn);\n\t};\n\n\tconst update = ({ state, currentFrame, ...settings }) => {\n\t\tswitch (state) {\n\t\t\tcase \"startSaving\":\n\t\t\t\tsaveButton.innerHTML = savingContainer.isDownloading();\n\t\t\t\tbreak;\n\t\t\tcase \"goToNextFrame\":\n\t\t\t\tbreak;\n\t\t\tcase \"saveNextFrame\":\n\t\t\t\tsavingContainer.updateNumFrame();\n\t\t\t\tbreak;\n\t\t\tcase \"saved\":\n\t\t\t\tsavingContainer.updateNumFrame();\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsaveButton.innerHTML = savingContainer.finished();\n\t\t\t\t}, 500);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsaveButton.innerHTML = savingContainer.isDownloaded();\n\t\t\t\t}, 2000);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\t// display(settings);\n\t};\n\n\treturn { init, update, saveButton };\n};\n","export const settingsGUI = ({ settings, container }) => {\n\tconst settingsContainerArray = [];\n\tconst settingsButton = () => {\n\t\tlet isOpen = false;\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.classList.add(\"canvas-for-print_gui-inner-container\");\n\t\tcontainer.appendChild(button);\n\t\tbutton.innerHTML = \"<p>settings</p>\";\n\t\tconst initListener = () => {\n\t\t\tbutton.addEventListener(\"click\", onClickHandler);\n\t\t\t// button.addEventListener(\"mouseenter\", onMouseEnterHandler);\n\t\t\t// button.addEventListener(\"mouseleave\", onMouseLeaveHandler);\n\t\t};\n\n\t\tconst onClickHandler = () => {\n\t\t\tfor (let i in settingsContainerArray) {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tsettingsContainerArray[i].classList.add(\"canvas-for-print_hide\");\n\t\t\t\t} else {\n\t\t\t\t\tsettingsContainerArray[i].classList.remove(\"canvas-for-print_hide\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tisOpen = !isOpen;\n\t\t};\n\t\tinitListener();\n\t};\n\tconst infos = (val) => {\n\t\tsettings = { ...val, ...settings };\n\t\tcreateInnerContainer({\n\t\t\tid: \"size\",\n\t\t\tval:\n\t\t\t\tsettings.width +\n\t\t\t\t\" \" +\n\t\t\t\tsettings.unit +\n\t\t\t\t\" Ã \" +\n\t\t\t\tsettings.height +\n\t\t\t\t\" \" +\n\t\t\t\tsettings.unit,\n\t\t});\n\t\tcreateInnerContainer({\n\t\t\tid: \"ppi\",\n\t\t\tval: settings.ppi + \" ppi\",\n\t\t});\n\t\tcreateInnerContainer({\n\t\t\tid: \"mode\",\n\t\t\tval: settings.mode + \" mode\",\n\t\t});\n\t\tif (settings.mode === \"sequence\") {\n\t\t\tcreateInnerContainer({\n\t\t\t\tid: \"recordingFrames\",\n\t\t\t\tval:\n\t\t\t\t\t\"frames \" +\n\t\t\t\t\tsettings.recordingFrames.start +\n\t\t\t\t\t\" to \" +\n\t\t\t\t\tsettings.recordingFrames.end,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst createInnerContainer = ({ val, id }) => {\n\t\tconst elem = document.createElement(\"div\");\n\t\t// elem.setAttribute(\"id\", \"canvas-for-print_gui-infos-container\");\n\t\telem.classList.add(\"canvas-for-print_gui-inner-container\");\n\t\telem.classList.add(\"canvas-for-print_hide\");\n\t\telem.innerHTML = \"<p>\" + val + \"</p>\";\n\n\t\tcontainer.appendChild(elem);\n\t\tsettingsContainerArray.push(elem);\n\t};\n\n\tconst fileName = () => {\n\t\tconst fileName = document.createElement(\"input\");\n\t};\n\n\tconst pictureOrSequence = (mode) => {\n\t\tconst button = document.createElement(\"button\");\n\t};\n\n\tconst sequenceSettings = () => {\n\t\tconst sequenceStart = document.createElement(\"input\");\n\t\tconst sequenceEnd = document.createElement(\"input\");\n\t};\n\n\tconst submitButton = (name, fn) => {};\n\n\treturn { infos, pictureOrSequence, sequenceSettings, settingsButton };\n};\n","/****** \n * \n@param {object} userSettings - Insert your settings\n@param {number} userSettings.width - width of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.height -  height of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.ppi -  resolution of the canvas in ppi (default: 300)\n@param {string} userSettings.unit -  unit of measure of the canvas (default: mm)\n@param {object} userSettings.container -  container of your object\n * \n * ******/\n\nimport { saveFileHandler } from \"./core/saveFile/saveFileHandler\";\nimport Size from \"./core/size\";\nimport defaults from \"./defaults.js\";\nimport { GUI } from \"./UI\";\n\nconst canvasForPrint = (userSettings) => {\n\tlet settings = { ...defaults, ...userSettings };\n\tsettings.elem = document.createElement(\"canvas\");\n\tlet CANVASP = settings.elem;\n\tconst Interface = GUI({ settings });\n\tconst handler = saveFileHandler({ settings });\n\tconst ctx = CANVASP.getContext(settings.context);\n\tconst events = [];\n\tlet savingMode = false;\n\tconst size = Size(settings);\n\n\tconst getStyleSize = () => {\n\t\treturn size.getCanvasStyleSize();\n\t};\n\n\tconst on = (eventName, fn) => {\n\t\tif (!events[eventName]) {\n\t\t\tevents[eventName] = [];\n\t\t}\n\t\tevents[eventName].push(fn);\n\t\treturn () => {\n\t\t\tevents[eventName] = events[eventName].filter((eventFn) => fn !== eventFn);\n\t\t};\n\t};\n\n\tconst emit = (eventName, data) => {\n\t\tconst event = events[eventName];\n\t\tif (event) {\n\t\t\tevent.forEach((fn) => {\n\t\t\t\tfn.call(null, data);\n\t\t\t});\n\t\t}\n\t};\n\tconst setCanvas = (elem) => {\n\t\tconst element = elem.elt || elem;\n\t\tsettings.elem = element;\n\t\tCANVASP = element;\n\t};\n\n\tconst init = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\tInterface.init(saveCanvas);\n\t\tInterface.update({ ...settings });\n\t\treturn { ...settings };\n\t};\n\n\tconst create = () => {\n\t\tCANVASP.id = settings.id;\n\t\tsettings.container.appendChild(CANVASP);\n\t};\n\n\tconst setFileName = (fileName) => {\n\t\thandler.setFileName(fileName);\n\t};\n\n\tconst saveCanvas = async () => {\n\t\tif (!savingMode) {\n\t\t\temit(\"startSaving\");\n\t\t\tInterface.update({\n\t\t\t\tstate: \"startSaving\",\n\t\t\t\t...settings,\n\t\t\t});\n\t\t\tsavingMode = true;\n\t\t}\n\t\tif (settings.mode === \"sequence\") {\n\t\t\tawait handler.sequenceMode().then((val) => {\n\t\t\t\tInterface.update({\n\t\t\t\t\tstate: val.state,\n\t\t\t\t\tcurrentFrame: val.currentFrame,\n\t\t\t\t\t...settings,\n\t\t\t\t});\n\t\t\t\tswitch (val.state) {\n\t\t\t\t\tcase \"goToNextFrame\":\n\t\t\t\t\t\temit(\"frameSaved\");\n\t\t\t\t\t\trequestAnimationFrame(saveCanvas);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"saveNextFrame\":\n\t\t\t\t\t\temit(\"frameSaved\");\n\t\t\t\t\t\trequestAnimationFrame(saveCanvas);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"saved\":\n\t\t\t\t\t\temit(\"saved\");\n\t\t\t\t\t\tsavingMode = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tawait handler.pictureMode().then((val) => {\n\t\t\t\tInterface.update({\n\t\t\t\t\tstate: val.state,\n\t\t\t\t\t...settings,\n\t\t\t\t});\n\t\t\t\temit(\"saved\");\n\t\t\t\tsavingMode = false;\n\t\t\t});\n\t\t}\n\t};\n\n\twindow.onresize = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\temit(\"resize\", settings);\n\t};\n\tinit();\n\n\treturn {\n\t\t...settings,\n\t\ton,\n\t\tgetStyleSize,\n\t\tcreate,\n\t\tsaveCanvas,\n\t\tctx,\n\t\tsetCanvas,\n\t\tsetFileName,\n\t};\n};\n\nexport default canvasForPrint;\n"],"names":["definition","global","window","this","HTMLElement","console","warn","mitmTransporter","supportsTransferable","ponyfill","WebStreamsPolyfill","isSecureContext","useBlobFallback","test","safari","WebKitPoint","downloadStrategy","document","documentElement","style","streamSaver","createWriteStream","filename","options","size","opts","pathname","writableStrategy","undefined","readableStrategy","bytesWritten","downloadUrl","channel","ts","Number","isFinite","highWaterMark","makeIframe","mitm","src","delegate","createDocumentFragment","popup","frame","open","loaded","isIframe","isPopup","remove","close","addEventListener","args","dispatchEvent","removeEventListener","postMessage","onReady","evt","source","Event","makePopup","MessageChannel","encodeURIComponent","replace","escape","response","transferringReadable","Math","random","toString","slice","headers","port2","transformer","transform","chunk","controller","Uint8Array","TypeError","length","enqueue","location","href","flush","TransformStream","readableStream","readable","port1","onmessage","data","download","abort","chunks","once","writable","WritableStream","write","push","blob","Blob","type","link","createElement","URL","createObjectURL","click","supported","version","full","major","minor","dot","Error","iframe","hidden","name","contentWindow","body","appendChild","Response","ReadableStream","navigator","err","fn","e","mc","Object","defineProperty","configurable","value","exports","saveFile","async","fileName","canvasToSave","canvas","Promise","resolve","reject","toBlob","blobCanvas","fileStream","StreamSaver.createWriteStream","stream","pipeTo","then","writer","getWriter","reader","getReader","pump","read","res","done","saveFileHandler","settings","prefix","currentFrame","recordingFrames","current","startFrame","start","endFrame","end","pictureMode","elem","state","sequenceMode","setTimeout","beforeRecording","timeoutBetweenSavingFrames","savingFile","setFileName","newFileName","supportedUnit","unit","multipleToInches","label","Size","props","widthInPixels","heightInPixels","CANVASP","displaySize","calcSize","ratio","width","height","ppi","i","convertPixelsToUnit","parentContainer","parentStyle","getComputedStyle","parentWidth","parseFloat","parentHeight","paddingBottom","match","paddingTop","windowWidth","innerWidth","windowHeight","innerHeight","displayWidth","displayHeight","overflowY","min","setDisplaySize","container","setSize","getCanvasSize","getCanvasStyleSize","defaults","p5Mode","mode","id","pixelDensity","devicePixelRatio","context","GUI","savingContainer","saveButton","classList","add","setAttribute","spinner","numFramesContainer","isDownloaded","backgroundColor","isDownloading","updateNumFrame","numFrame","getElementById","innerText","finished","saveGUI","settingsDisplay","settingsContainerArray","createInnerContainer","val","innerHTML","infos","pictureOrSequence","sequenceSettings","settingsButton","isOpen","button","onClickHandler","settingsGUI","initListener","saveCanvasFn","init","update","userSettings","Interface","handler","ctx","getContext","events","savingMode","emit","eventName","event","forEach","call","saveCanvas","requestAnimationFrame","onresize","on","filter","eventFn","getStyleSize","create","setCanvas","element","elt"],"mappings":"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"}