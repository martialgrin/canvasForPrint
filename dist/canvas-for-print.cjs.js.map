{"version":3,"file":"canvas-for-print.cjs.js","sources":["../node_modules/streamsaver/StreamSaver.js","../lib/core/saveFile/saveFile.js","../lib/utils/pixelsToUnit.js","../lib/core/size/setDisplaySize.js","../lib/core/size/index.js","../lib/defaults.js","../lib/UI/Container.js","../lib/index.js"],"sourcesContent":["/*! streamsaver. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\n/* global chrome location ReadableStream define MessageChannel TransformStream */\n\n;((name, definition) => {\n  typeof module !== 'undefined'\n    ? module.exports = definition()\n    : typeof define === 'function' && typeof define.amd === 'object'\n      ? define(definition)\n      : this[name] = definition()\n})('streamSaver', () => {\n  'use strict'\n\n  const global = typeof window === 'object' ? window : this\n  if (!global.HTMLElement) console.warn('streamsaver is meant to run on browsers main thread')\n\n  let mitmTransporter = null\n  let supportsTransferable = false\n  const test = fn => { try { fn() } catch (e) {} }\n  const ponyfill = global.WebStreamsPolyfill || {}\n  const isSecureContext = global.isSecureContext\n  // TODO: Must come up with a real detection test (#69)\n  let useBlobFallback = /constructor/i.test(global.HTMLElement) || !!global.safari || !!global.WebKitPoint\n  const downloadStrategy = isSecureContext || 'MozAppearance' in document.documentElement.style\n    ? 'iframe'\n    : 'navigate'\n\n  const streamSaver = {\n    createWriteStream,\n    WritableStream: global.WritableStream || ponyfill.WritableStream,\n    supported: true,\n    version: { full: '2.0.5', major: 2, minor: 0, dot: 5 },\n    mitm: 'https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0'\n  }\n\n  /**\n   * create a hidden iframe and append it to the DOM (body)\n   *\n   * @param  {string} src page to load\n   * @return {HTMLIFrameElement} page to load\n   */\n  function makeIframe (src) {\n    if (!src) throw new Error('meh')\n    const iframe = document.createElement('iframe')\n    iframe.hidden = true\n    iframe.src = src\n    iframe.loaded = false\n    iframe.name = 'iframe'\n    iframe.isIframe = true\n    iframe.postMessage = (...args) => iframe.contentWindow.postMessage(...args)\n    iframe.addEventListener('load', () => {\n      iframe.loaded = true\n    }, { once: true })\n    document.body.appendChild(iframe)\n    return iframe\n  }\n\n  /**\n   * create a popup that simulates the basic things\n   * of what a iframe can do\n   *\n   * @param  {string} src page to load\n   * @return {object}     iframe like object\n   */\n  function makePopup (src) {\n    const options = 'width=200,height=100'\n    const delegate = document.createDocumentFragment()\n    const popup = {\n      frame: global.open(src, 'popup', options),\n      loaded: false,\n      isIframe: false,\n      isPopup: true,\n      remove () { popup.frame.close() },\n      addEventListener (...args) { delegate.addEventListener(...args) },\n      dispatchEvent (...args) { delegate.dispatchEvent(...args) },\n      removeEventListener (...args) { delegate.removeEventListener(...args) },\n      postMessage (...args) { popup.frame.postMessage(...args) }\n    }\n\n    const onReady = evt => {\n      if (evt.source === popup.frame) {\n        popup.loaded = true\n        global.removeEventListener('message', onReady)\n        popup.dispatchEvent(new Event('load'))\n      }\n    }\n\n    global.addEventListener('message', onReady)\n\n    return popup\n  }\n\n  try {\n    // We can't look for service worker since it may still work on http\n    new Response(new ReadableStream())\n    if (isSecureContext && !('serviceWorker' in navigator)) {\n      useBlobFallback = true\n    }\n  } catch (err) {\n    useBlobFallback = true\n  }\n\n  test(() => {\n    // Transferable stream was first enabled in chrome v73 behind a flag\n    const { readable } = new TransformStream()\n    const mc = new MessageChannel()\n    mc.port1.postMessage(readable, [readable])\n    mc.port1.close()\n    mc.port2.close()\n    supportsTransferable = true\n    // Freeze TransformStream object (can only work with native)\n    Object.defineProperty(streamSaver, 'TransformStream', {\n      configurable: false,\n      writable: false,\n      value: TransformStream\n    })\n  })\n\n  function loadTransporter () {\n    if (!mitmTransporter) {\n      mitmTransporter = isSecureContext\n        ? makeIframe(streamSaver.mitm)\n        : makePopup(streamSaver.mitm)\n    }\n  }\n\n  /**\n   * @param  {string} filename filename that should be used\n   * @param  {object} options  [description]\n   * @param  {number} size     deprecated\n   * @return {WritableStream<Uint8Array>}\n   */\n  function createWriteStream (filename, options, size) {\n    let opts = {\n      size: null,\n      pathname: null,\n      writableStrategy: undefined,\n      readableStrategy: undefined\n    }\n\n    let bytesWritten = 0 // by StreamSaver.js (not the service worker)\n    let downloadUrl = null\n    let channel = null\n    let ts = null\n\n    // normalize arguments\n    if (Number.isFinite(options)) {\n      [ size, options ] = [ options, size ]\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else if (options && options.highWaterMark) {\n      console.warn('[StreamSaver] Deprecated pass an object as 2nd argument when creating a write stream')\n      opts.size = size\n      opts.writableStrategy = options\n    } else {\n      opts = options || {}\n    }\n    if (!useBlobFallback) {\n      loadTransporter()\n\n      channel = new MessageChannel()\n\n      // Make filename RFC5987 compatible\n      filename = encodeURIComponent(filename.replace(/\\//g, ':'))\n        .replace(/['()]/g, escape)\n        .replace(/\\*/g, '%2A')\n\n      const response = {\n        transferringReadable: supportsTransferable,\n        pathname: opts.pathname || Math.random().toString().slice(-6) + '/' + filename,\n        headers: {\n          'Content-Type': 'application/octet-stream; charset=utf-8',\n          'Content-Disposition': \"attachment; filename*=UTF-8''\" + filename\n        }\n      }\n\n      if (opts.size) {\n        response.headers['Content-Length'] = opts.size\n      }\n\n      const args = [ response, '*', [ channel.port2 ] ]\n\n      if (supportsTransferable) {\n        const transformer = downloadStrategy === 'iframe' ? undefined : {\n          // This transformer & flush method is only used by insecure context.\n          transform (chunk, controller) {\n            if (!(chunk instanceof Uint8Array)) {\n              throw new TypeError('Can only write Uint8Arrays')\n            }\n            bytesWritten += chunk.length\n            controller.enqueue(chunk)\n\n            if (downloadUrl) {\n              location.href = downloadUrl\n              downloadUrl = null\n            }\n          },\n          flush () {\n            if (downloadUrl) {\n              location.href = downloadUrl\n            }\n          }\n        }\n        ts = new streamSaver.TransformStream(\n          transformer,\n          opts.writableStrategy,\n          opts.readableStrategy\n        )\n        const readableStream = ts.readable\n\n        channel.port1.postMessage({ readableStream }, [ readableStream ])\n      }\n\n      channel.port1.onmessage = evt => {\n        // Service worker sent us a link that we should open.\n        if (evt.data.download) {\n          // Special treatment for popup...\n          if (downloadStrategy === 'navigate') {\n            mitmTransporter.remove()\n            mitmTransporter = null\n            if (bytesWritten) {\n              location.href = evt.data.download\n            } else {\n              downloadUrl = evt.data.download\n            }\n          } else {\n            if (mitmTransporter.isPopup) {\n              mitmTransporter.remove()\n              mitmTransporter = null\n              // Special case for firefox, they can keep sw alive with fetch\n              if (downloadStrategy === 'iframe') {\n                makeIframe(streamSaver.mitm)\n              }\n            }\n\n            // We never remove this iframes b/c it can interrupt saving\n            makeIframe(evt.data.download)\n          }\n        } else if (evt.data.abort) {\n          chunks = []\n          channel.port1.postMessage('abort') //send back so controller is aborted\n          channel.port1.onmessage = null\n          channel.port1.close()\n          channel.port2.close()\n          channel = null\n        }\n      }\n\n      if (mitmTransporter.loaded) {\n        mitmTransporter.postMessage(...args)\n      } else {\n        mitmTransporter.addEventListener('load', () => {\n          mitmTransporter.postMessage(...args)\n        }, { once: true })\n      }\n    }\n\n    let chunks = []\n\n    return (!useBlobFallback && ts && ts.writable) || new streamSaver.WritableStream({\n      write (chunk) {\n        if (!(chunk instanceof Uint8Array)) {\n          throw new TypeError('Can only write Uint8Arrays')\n        }\n        if (useBlobFallback) {\n          // Safari... The new IE6\n          // https://github.com/jimmywarting/StreamSaver.js/issues/69\n          //\n          // even though it has everything it fails to download anything\n          // that comes from the service worker..!\n          chunks.push(chunk)\n          return\n        }\n\n        // is called when a new chunk of data is ready to be written\n        // to the underlying sink. It can return a promise to signal\n        // success or failure of the write operation. The stream\n        // implementation guarantees that this method will be called\n        // only after previous writes have succeeded, and never after\n        // close or abort is called.\n\n        // TODO: Kind of important that service worker respond back when\n        // it has been written. Otherwise we can't handle backpressure\n        // EDIT: Transferable streams solves this...\n        channel.port1.postMessage(chunk)\n        bytesWritten += chunk.length\n\n        if (downloadUrl) {\n          location.href = downloadUrl\n          downloadUrl = null\n        }\n      },\n      close () {\n        if (useBlobFallback) {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = filename\n          link.click()\n        } else {\n          channel.port1.postMessage('end')\n        }\n      },\n      abort () {\n        chunks = []\n        channel.port1.postMessage('abort')\n        channel.port1.onmessage = null\n        channel.port1.close()\n        channel.port2.close()\n        channel = null\n      }\n    }, opts.writableStrategy)\n  }\n\n  return streamSaver\n})\n","import * as StreamSaver from \"streamsaver\";\n\nexport const saveFile = async () => {\n\tconsole.log(StreamSaver);\n\tconsole.log(\"Enter in save File\");\n\tconst canvas = document.getElementById(\"canvas-for-print\");\n\treturn new Promise((resolve, reject) => {\n\t\tcanvas.toBlob((blobCanvas) => {\n\t\t\t// document.body.appendChild(newImg);\n\t\t\tconst blob = new Blob([blobCanvas], { type: \"image/png\" });\n\t\t\tconst fileStream = StreamSaver.createWriteStream(\"sample.png\", {\n\t\t\t\tsize: blob.size, // Makes the percentage visiable in the download\n\t\t\t});\n\t\t\tconst readableStream = blob.stream();\n\n\t\t\t// more optimized pipe version\n\t\t\t// (Safari may have pipeTo but it's useless without the WritableStream)\n\t\t\tif (window.WritableStream && readableStream.pipeTo) {\n\t\t\t\treturn readableStream.pipeTo(fileStream).then(() => {\n\t\t\t\t\tresolve();\n\t\t\t\t\tconsole.log(\"it's done\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Write (pipe) manually\n\t\t\twindow.writer = fileStream.getWriter();\n\n\t\t\tconst reader = readableStream.getReader();\n\t\t\tconst pump = () =>\n\t\t\t\treader\n\t\t\t\t\t.read()\n\t\t\t\t\t.then((res) =>\n\t\t\t\t\t\tres.done ? writer.close() : writer.write(res.value).then(pump)\n\t\t\t\t\t);\n\n\t\t\t// pump();\n\t\t});\n\t});\n};\n","const supportedUnit = [\n\t{ unit: \"mm\", multipleToInches: 25.4, label: \"millimeters\" },\n\t{ unit: \"cm\", multipleToInches: 2.54, label: \"centimeters\" },\n\t{ unit: \"dm\", multipleToInches: 0.254, label: \"decimeters\" },\n\t{ unit: \"m\", multipleToInches: 0.0254, label: \"meters\" },\n\t{ unit: \"in\", multipleToInches: 1, label: \"inches\" },\n];\nexport const convertPixelsToUnit = ({ unit, width, height, dpi, ratio }) => {\n\tlet multipleToInches = 1;\n\tfor (let i in supportedUnit) {\n\t\tif (unit == supportedUnit[i].unit) {\n\t\t\tmultipleToInches = supportedUnit[i].multipleToInches;\n\t\t\tbreak;\n\t\t}\n\t}\n\twidth = (width / multipleToInches) * dpi;\n\theight = (height / multipleToInches) * dpi;\n\n\tratio = width / height;\n\n\treturn [width, height, ratio];\n};\n","const setDisplaySize = (ratio, parentContainer) => {\n\tconst parentStyle = getComputedStyle(parentContainer);\n\tconst parentWidth = parseFloat(parentStyle.width);\n\n\tlet parentHeight = parseFloat(parentStyle.height);\n\tconst windowWidth = window.innerWidth;\n\tconst windowHeight = window.innerHeight;\n\n\tif (parentHeight == 0) {\n\t\tparentContainer.style.height = window.innerHeight + \"px\";\n\t\tparentContainer.style.overflowY = \"hidden\";\n\t\tparentHeight = parentContainer.offsetHeight;\n\t}\n\n\tsetDefaultsParamsForWindow();\n\tlet displayWidth, displayHeight;\n\n\tdisplayHeight = Math.min(windowHeight, parentHeight);\n\tdisplayWidth = displayHeight * ratio;\n\n\tif (displayWidth > windowWidth) {\n\t\tdisplayWidth = Math.min(windowWidth, parentWidth);\n\t\tdisplayHeight = displayWidth / ratio;\n\t}\n\n\treturn { width: displayWidth, height: displayHeight };\n};\n\nconst setDefaultsParamsForWindow = () => {\n\tdocument.body.style.minHeight = window.innerHeight;\n\tdocument.body.style.minWidth = window.innerWidth;\n};\nexport default setDisplaySize;\n","import { convertPixelsToUnit } from \"../../utils/pixelsToUnit\";\nimport convertInputSizeToPixels from \"./convertInputSizeToPixels\";\nimport setDisplaySize from \"./setDisplaySize\";\n\nconst Size = (\n\tprops = { width, height, CANVASP, container, unit, dpi, ratio }\n) => {\n\tlet settings = { ...props, widthInPixels: 0, heightInPixels: 0 };\n\tconst CANVASP = settings.CANVASP;\n\tconst setSize = () => {\n\t\tconst displaySize = calcSize();\n\t\tCANVASP.width = settings.widthInPixels;\n\t\tCANVASP.height = settings.heightInPixels;\n\t\tCANVASP.style.width = displaySize.width + \"px\";\n\t\tCANVASP.style.height = displaySize.height + \"px\";\n\t};\n\n\tconst calcSize = () => {\n\t\t[settings.widthInPixels, settings.heightInPixels, settings.ratio] =\n\t\t\tconvertPixelsToUnit({\n\t\t\t\t...settings,\n\t\t\t});\n\t\tconst displaySize = setDisplaySize(settings.ratio, settings.container);\n\t\treturn displaySize;\n\t};\n\n\tconst getCanvasSize = () => {\n\t\treturn { width: settings.widthInPixels, height: settings.heightInPixels };\n\t};\n\n\tconst init = () => {};\n\treturn { init, setSize, getCanvasSize };\n};\nexport default Size;\n","export default {\n\t//Size\n\tp5Mode: false,\n\telem: document.createElement(\"canvas\"),\n\twidth: 210,\n\theight: 297,\n\tdpi: 300,\n\twidthInPixels: null,\n\theightInPixels: null,\n\tunit: \"mm\",\n\tratio: null,\n\tmode: \"picture\",\n\trecordingFrames: { start: 0, end: 100, current: 0 },\n\t//container options\n\tcontainer: document.body,\n\tid: \"canvas-for-print\",\n\tpixelDensity: window.devicePixelRatio,\n\tcontext: \"2d\",\n};\n","import { saveFile } from \"../core/saveFile/saveFile\";\nimport \"./style.css\";\n\nexport const Container = () => {\n\tconst container = document.createElement(\"div\");\n\tconst button = document.createElement(\"button\");\n\tconst infosContainer = document.createElement(\"div\");\n\tconst saveButton = document.createElement(\"button\");\n\tlet isHidden = false;\n\tif (isHidden) {\n\t\tcontainer.classList.add(\"hide\");\n\t}\n\n\tconst initListener = () => {\n\t\tbutton.addEventListener(\"click\", onClickHandler);\n\t\tbutton.addEventListener(\"mouseenter\", onMouseEnterHandler);\n\t\tbutton.addEventListener(\"mouseleave\", onMouseLeaveHandler);\n\t};\n\tconst init = () => {\n\t\tdocument.body.appendChild(container);\n\t\tcontainer.appendChild(infosContainer);\n\t\tcontainer.appendChild(button);\n\t\tcontainer.appendChild(saveButton);\n\t\tbutton.setAttribute(\"id\", \"canvaspdflib_gui-display-button\");\n\t\tcontainer.setAttribute(\"id\", \"canvaspdflib_gui-container\");\n\t\tinfosContainer.setAttribute(\"id\", \"canvaspdflib_gui-infos-container\");\n\t\tsaveButton.setAttribute(\"id\", \"canvaspdflib_gui-save-button\");\n\t\tbutton.innerHTML = \"<div><p>open</p></div>\";\n\t\tsaveButton.innerHTML = \"<p>save</p>\";\n\t\tinitListener();\n\t};\n\n\tconst onMouseEnterHandler = () => {\n\t\tisHidden ? container.classList.add(\"canvaspdflib_button-is-hover\") : \"\";\n\t};\n\n\tconst onMouseLeaveHandler = () => {\n\t\tif (isHidden) {\n\t\t\tconst elems = document.getElementsByClassName(\n\t\t\t\t\"canvaspdflib_button-is-hover\"\n\t\t\t);\n\t\t\tif (elems.length > 0) {\n\t\t\t\tfor (let elem in elems) {\n\t\t\t\t\tif (typeof elems[elem] == \"object\") {\n\t\t\t\t\t\telems[elem].classList.remove(\"canvaspdflib_button-is-hover\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst update = ({ ...settings }) => {\n\t\tdisplay(settings);\n\t};\n\n\tconst display = (settings) => {\n\t\tinfosContainer.innerHTML =\n\t\t\t\"<p> \" +\n\t\t\tsettings.width +\n\t\t\t\" \" +\n\t\t\tsettings.unit +\n\t\t\t\" Ã \" +\n\t\t\tsettings.height +\n\t\t\t\" \" +\n\t\t\tsettings.unit +\n\t\t\t\"<br/>\" +\n\t\t\tsettings.dpi +\n\t\t\t\" dpi</p>\";\n\t};\n\n\tconst onClickHandler = () => {\n\t\tif (isHidden) {\n\t\t\tcontainer.classList.remove(\"hide\");\n\t\t\tsetTimeout(() => {\n\t\t\t\tbutton.innerHTML = \"<div><p>close</p></div>\";\n\t\t\t}, 250);\n\t\t} else {\n\t\t\tsetTimeout(() => {\n\t\t\t\tbutton.innerHTML = \"<div><p>open</p></div>\";\n\t\t\t}, 250);\n\t\t\tcontainer.classList.add(\"hide\");\n\t\t}\n\n\t\tisHidden = !isHidden;\n\t};\n\tinit();\n\n\treturn { init, update, saveButton };\n};\n","/****** \n * \n@param {object} userSettings - Insert your settings\n@param {number} userSettings.width - width of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.height -  height of your desired canvas (in unit setted (default:mm))\n@param {number} userSettings.dpi -  resolution of the canvas in dpi (default: 300)\n@param {string} userSettings.unit -  unit of measure of the canvas (default: mm)\n@param {object} userSettings.container -  container of your object\n * \n * ******/\n\n// https://github.com/ertdfgcvb/Sequencer/blob/master/src/sequencer.js\n\nimport { saveFile } from \"./core/saveFile/saveFile\";\nimport Size from \"./core/size\";\nimport defaults from \"./defaults.js\";\nimport { Container } from \"./UI\";\n\nconst canvasForPrint = (userSettings) => {\n\tlet settings = { ...defaults, ...userSettings };\n\tconst CANVASP = settings.elem;\n\tconst GUI = Container();\n\tconst saveFileButton = GUI.saveButton;\n\tconst ctx = CANVASP.getContext(settings.context);\n\tconst events = [];\n\n\tconst on = (eventName, fn) => {\n\t\tif (!events[eventName]) {\n\t\t\tevents[eventName] = [];\n\t\t}\n\t\tevents[eventName].push(fn);\n\t\treturn () => {\n\t\t\tevents[eventName] = events[eventName].filter((eventFn) => fn !== eventFn);\n\t\t};\n\t};\n\tconst emit = (eventName, data) => {\n\t\tconst event = events[eventName];\n\t\tif (event) {\n\t\t\tevent.forEach((fn) => {\n\t\t\t\tfn.call(null, data);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst size = Size({\n\t\twidth: settings.width,\n\t\theight: settings.height,\n\t\tunit: settings.unit,\n\t\tdpi: settings.dpi,\n\t\tratio: settings.ratio,\n\t\tCANVASP,\n\t\tcontainer: settings.container,\n\t});\n\n\tconst initListener = () => {\n\t\tsaveFileButton.addEventListener(\"click\", saveFileHandler);\n\t};\n\tconst saveFileHandler = async () => {\n\t\temit(\"saving\", settings);\n\t\tawait saveFile();\n\t\temit(\"saved\", settings);\n\t\tif (settings.mode === \"sequence\") {\n\t\t\temit(\"saveNextFrame\", settings);\n\t\t\tsettings.recordingFrames.current++;\n\t\t}\n\t};\n\n\tconst init = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\tcreate();\n\t\tGUI.init();\n\t\tGUI.update({ ...settings });\n\t\tinitListener();\n\t\treturn { ...settings };\n\t};\n\n\tconst create = () => {\n\t\tCANVASP.id = settings.id;\n\t\tsettings.container.appendChild(CANVASP);\n\t};\n\n\tconst saveCanvas = () => {\n\t\tsaveFileHandler();\n\t};\n\n\twindow.onresize = () => {\n\t\tsize.setSize();\n\t\tconst { width, height } = size.getCanvasSize();\n\t\tsettings.widthInPixels = width;\n\t\tsettings.heightInPixels = height;\n\t\tGUI.update({ ...settings });\n\t};\n\tinit();\n\n\treturn {\n\t\t...settings,\n\t\ton,\n\t\tsaveCanvas,\n\t\tctx,\n\t};\n};\n\nexport default canvasForPrint;\n"],"names":["definition","global","window","this","HTMLElement","console","warn","mitmTransporter","supportsTransferable","ponyfill","WebStreamsPolyfill","isSecureContext","useBlobFallback","test","safari","WebKitPoint","downloadStrategy","document","documentElement","style","streamSaver","createWriteStream","filename","options","size","opts","pathname","writableStrategy","undefined","readableStrategy","bytesWritten","downloadUrl","channel","ts","Number","isFinite","highWaterMark","makeIframe","mitm","src","delegate","createDocumentFragment","popup","frame","open","loaded","isIframe","isPopup","remove","close","addEventListener","args","dispatchEvent","removeEventListener","postMessage","onReady","evt","source","Event","makePopup","MessageChannel","encodeURIComponent","replace","escape","response","transferringReadable","Math","random","toString","slice","headers","port2","transformer","transform","chunk","controller","Uint8Array","TypeError","length","enqueue","location","href","flush","TransformStream","readableStream","readable","port1","onmessage","data","download","abort","chunks","once","writable","WritableStream","write","push","blob","Blob","type","link","createElement","URL","createObjectURL","click","supported","version","full","major","minor","dot","Error","iframe","hidden","name","contentWindow","body","appendChild","Response","ReadableStream","navigator","err","fn","e","mc","Object","defineProperty","configurable","value","exports","supportedUnit","unit","multipleToInches","label","setDefaultsParamsForWindow","minHeight","innerHeight","minWidth","innerWidth","Size","props","width","height","CANVASP","container","dpi","ratio","settings","widthInPixels","heightInPixels","calcSize","i","convertPixelsToUnit","parentContainer","parentStyle","getComputedStyle","parentWidth","parseFloat","parentHeight","windowWidth","windowHeight","displayWidth","displayHeight","overflowY","offsetHeight","min","setDisplaySize","init","setSize","displaySize","getCanvasSize","defaults","p5Mode","elem","mode","recordingFrames","start","end","current","id","pixelDensity","devicePixelRatio","context","Container","button","infosContainer","saveButton","isHidden","classList","add","setAttribute","innerHTML","onClickHandler","onMouseEnterHandler","onMouseLeaveHandler","elems","getElementsByClassName","display","setTimeout","update","userSettings","GUI","saveFileButton","ctx","getContext","events","emit","eventName","event","forEach","call","saveFileHandler","async","log","StreamSaver","canvas","getElementById","Promise","resolve","reject","toBlob","blobCanvas","fileStream","StreamSaver.createWriteStream","stream","pipeTo","then","writer","getWriter","getReader","saveFile","create","onresize","on","filter","eventFn","saveCanvas"],"mappings":";;aAIC,IAAQA,IAMS,KAGhB,MAAMC,EAA2B,iBAAXC,OAAsBA,OAASC,KAChDF,EAAOG,aAAaC,QAAQC,KAAK,uDAEtC,IAAIC,EAAkB,KAClBC,GAAuB,EAC3B,MACMC,EAAWR,EAAOS,oBAAsB,CAAE,EAC1CC,EAAkBV,EAAOU,gBAE/B,IAAIC,EAAkB,eAAeC,KAAKZ,EAAOG,gBAAkBH,EAAOa,UAAYb,EAAOc,YAC7F,MAAMC,EAAmBL,GAAmB,kBAAmBM,SAASC,gBAAgBC,MACpF,SACA,WAEEC,EAAc,CAClBC,kBAwGF,SAA4BC,EAAUC,EAASC,GAC7C,IAAIC,EAAO,CACTD,KAAM,KACNE,SAAU,KACVC,sBAAkBC,EAClBC,sBAAkBD,GAGhBE,EAAe,EACfC,EAAc,KACdC,EAAU,KACVC,EAAK,KAeT,GAZIC,OAAOC,SAASZ,KAChBC,EAAMD,GAAY,CAAEA,EAASC,GAC/BnB,QAAQC,KAAK,wFACbmB,EAAKD,KAAOA,EACZC,EAAKE,iBAAmBJ,GACfA,GAAWA,EAAQa,eAC5B/B,QAAQC,KAAK,wFACbmB,EAAKD,KAAOA,EACZC,EAAKE,iBAAmBJ,GAExBE,EAAOF,GAAW,CAAE,GAEjBX,EAAiB,CAvCjBL,IACHA,EAAkBI,EACd0B,EAAWjB,EAAYkB,MAzD/B,SAAoBC,GAClB,MAAMhB,EAAU,uBACViB,EAAWvB,SAASwB,yBACpBC,EAAQ,CACZC,MAAO1C,EAAO2C,KAAKL,EAAK,QAAShB,GACjCsB,QAAQ,EACRC,UAAU,EACVC,SAAS,EACTC,SAAYN,EAAMC,MAAMM,OAAS,EACjCC,oBAAqBC,GAAQX,EAASU,oBAAoBC,EAAO,EACjEC,iBAAkBD,GAAQX,EAASY,iBAAiBD,EAAO,EAC3DE,uBAAwBF,GAAQX,EAASa,uBAAuBF,EAAO,EACvEG,eAAgBH,GAAQT,EAAMC,MAAMW,eAAeH,EAAO,GAGtDI,EAAUC,IACVA,EAAIC,SAAWf,EAAMC,QACvBD,EAAMG,QAAS,EACf5C,EAAOoD,oBAAoB,UAAWE,GACtCb,EAAMU,cAAc,IAAIM,MAAM,SAC/B,EAKH,OAFAzD,EAAOiD,iBAAiB,UAAWK,GAE5Bb,CACR,CAgCOiB,CAAUvC,EAAYkB,OAuC1BN,EAAU,IAAI4B,eAGdtC,EAAWuC,mBAAmBvC,EAASwC,QAAQ,MAAO,MACnDA,QAAQ,SAAUC,QAClBD,QAAQ,MAAO,OAElB,MAAME,EAAW,CACfC,qBAAsBzD,EACtBkB,SAAUD,EAAKC,UAAYwC,KAAKC,SAASC,WAAWC,OAAO,GAAK,IAAM/C,EACtEgD,QAAS,CACP,eAAgB,0CAChB,sBAAuB,gCAAkChD,IAIzDG,EAAKD,OACPwC,EAASM,QAAQ,kBAAoB7C,EAAKD,MAG5C,MAAM2B,EAAO,CAAEa,EAAU,IAAK,CAAEhC,EAAQuC,QAExC,GAAI/D,EAAsB,CACxB,MAAMgE,EAAmC,WAArBxD,OAAgCY,EAAY,CAE9D6C,UAAWC,EAAOC,GAChB,KAAMD,aAAiBE,YACrB,MAAM,IAAIC,UAAU,8BAEtB/C,GAAgB4C,EAAMI,OACtBH,EAAWI,QAAQL,GAEf3C,IACFiD,SAASC,KAAOlD,EAChBA,EAAc,KAEjB,EACDmD,QACMnD,IACFiD,SAASC,KAAOlD,EAEnB,GAEHE,EAAK,IAAIb,EAAY+D,gBACnBX,EACA/C,EAAKE,iBACLF,EAAKI,kBAEP,MAAMuD,EAAiBnD,EAAGoD,SAE1BrD,EAAQsD,MAAMhC,YAAY,CAAE8B,kBAAkB,CAAEA,GACjD,CAEDpD,EAAQsD,MAAMC,UAAY/B,IAEpBA,EAAIgC,KAAKC,SAEc,aAArBzE,GACFT,EAAgByC,SAChBzC,EAAkB,KACduB,EACFkD,SAASC,KAAOzB,EAAIgC,KAAKC,SAEzB1D,EAAcyB,EAAIgC,KAAKC,WAGrBlF,EAAgBwC,UAClBxC,EAAgByC,SAChBzC,EAAkB,KAEO,WAArBS,GACFqB,EAAWjB,EAAYkB,OAK3BD,EAAWmB,EAAIgC,KAAKC,WAEbjC,EAAIgC,KAAKE,QAClBC,EAAS,GACT3D,EAAQsD,MAAMhC,YAAY,SAC1BtB,EAAQsD,MAAMC,UAAY,KAC1BvD,EAAQsD,MAAMrC,QACdjB,EAAQuC,MAAMtB,QACdjB,EAAU,KACX,EAGCzB,EAAgBsC,OAClBtC,EAAgB+C,eAAeH,GAE/B5C,EAAgB2C,iBAAiB,QAAQ,KACvC3C,EAAgB+C,eAAeH,EAAK,GACnC,CAAEyC,MAAM,GAEd,CAED,IAAID,EAAS,GAEb,OAAS/E,GAAmBqB,GAAMA,EAAG4D,UAAa,IAAIzE,EAAY0E,eAAe,CAC/EC,MAAOrB,GACL,KAAMA,aAAiBE,YACrB,MAAM,IAAIC,UAAU,8BAElBjE,EAMF+E,EAAOK,KAAKtB,IAcd1C,EAAQsD,MAAMhC,YAAYoB,GAC1B5C,GAAgB4C,EAAMI,OAElB/C,IACFiD,SAASC,KAAOlD,EAChBA,EAAc,MAEjB,EACDkB,QACE,GAAIrC,EAAiB,CACnB,MAAMqF,EAAO,IAAIC,KAAKP,EAAQ,CAAEQ,KAAM,4CAChCC,EAAOnF,SAASoF,cAAc,KACpCD,EAAKnB,KAAOqB,IAAIC,gBAAgBN,GAChCG,EAAKX,SAAWnE,EAChB8E,EAAKI,OACf,MACUxE,EAAQsD,MAAMhC,YAAY,MAE7B,EACDoC,QACEC,EAAS,GACT3D,EAAQsD,MAAMhC,YAAY,SAC1BtB,EAAQsD,MAAMC,UAAY,KAC1BvD,EAAQsD,MAAMrC,QACdjB,EAAQuC,MAAMtB,QACdjB,EAAU,IACX,GACAP,EAAKE,iBACT,EA5RCmE,eAAgB7F,EAAO6F,gBAAkBrF,EAASqF,eAClDW,WAAW,EACXC,QAAS,CAAEC,KAAM,QAASC,MAAO,EAAGC,MAAO,EAAGC,IAAK,GACnDxE,KAAM,yEASR,SAASD,EAAYE,GACnB,IAAKA,EAAK,MAAM,IAAIwE,MAAM,OAC1B,MAAMC,EAAS/F,SAASoF,cAAc,UAWtC,OAVAW,EAAOC,QAAS,EAChBD,EAAOzE,IAAMA,EACbyE,EAAOnE,QAAS,EAChBmE,EAAOE,KAAO,SACdF,EAAOlE,UAAW,EAClBkE,EAAO1D,YAAc,IAAIH,IAAS6D,EAAOG,cAAc7D,eAAeH,GACtE6D,EAAO9D,iBAAiB,QAAQ,KAC9B8D,EAAOnE,QAAS,CAAI,GACnB,CAAE+C,MAAM,IACX3E,SAASmG,KAAKC,YAAYL,GACnBA,CACR,CAqCD,IAEE,IAAIM,SAAS,IAAIC,gBACb5G,KAAqB,kBAAmB6G,aAC1C5G,GAAkB,EAErB,CAAC,MAAO6G,GACP7G,GAAkB,CACnB,CAuND,MAzSa8G,KAAQ,IAAMA,IAAO,MAAOC,MAoFzC9G,EAAK,KAEH,MAAMwE,SAAEA,GAAa,IAAIF,gBACnByC,EAAK,IAAIhE,eACfgE,EAAGtC,MAAMhC,YAAY+B,EAAU,CAACA,IAChCuC,EAAGtC,MAAMrC,QACT2E,EAAGrD,MAAMtB,QACTzC,GAAuB,EAEvBqH,OAAOC,eAAe1G,EAAa,kBAAmB,CACpD2G,cAAc,EACdlC,UAAU,EACVmC,MAAO7C,iBACP,IAwMG/D,KArTH6G,QAAiBjI,+CCJhB,MCFDkI,EAAgB,CACrB,CAAEC,KAAM,KAAMC,iBAAkB,KAAMC,MAAO,eAC7C,CAAEF,KAAM,KAAMC,iBAAkB,KAAMC,MAAO,eAC7C,CAAEF,KAAM,KAAMC,iBAAkB,KAAOC,MAAO,cAC9C,CAAEF,KAAM,IAAKC,iBAAkB,MAAQC,MAAO,UAC9C,CAAEF,KAAM,KAAMC,iBAAkB,EAAGC,MAAO,WCuBrCC,EAA6B,KAClCrH,SAASmG,KAAKjG,MAAMoH,UAAYrI,OAAOsI,YACvCvH,SAASmG,KAAKjG,MAAMsH,SAAWvI,OAAOwI,UAAU,EC1B3CC,EAAO,CACZC,EAAQ,CAAEC,YAAOC,cAAQC,UAASC,oBAAWb,UAAMc,QAAKC,gBAExD,IAAIC,EAAW,IAAKP,EAAOQ,cAAe,EAAGC,eAAgB,GAC7D,MAAMN,EAAUI,EAASJ,QASnBO,EAAW,MACfH,EAASC,cAAeD,EAASE,eAAgBF,EAASD,OFX1B,GAAGf,OAAMU,QAAOC,SAAQG,MAAKC,YAC/D,IAAId,EAAmB,EACvB,IAAK,IAAImB,KAAKrB,EACb,GAAIC,GAAQD,EAAcqB,GAAGpB,KAAM,CAClCC,EAAmBF,EAAcqB,GAAGnB,iBACpC,KACA,CAOF,MAAO,CALPS,EAASA,EAAQT,EAAoBa,EACrCH,EAAUA,EAASV,EAAoBa,EAE/BJ,EAAQC,EAEa,EED3BU,CAAoB,IAChBL,IAGL,MDvBqB,EAACD,EAAOO,KAC9B,MAAMC,EAAcC,iBAAiBF,GAC/BG,EAAcC,WAAWH,EAAYb,OAE3C,IAAIiB,EAAeD,WAAWH,EAAYZ,QAC1C,MAAMiB,EAAc7J,OAAOwI,WACrBsB,EAAe9J,OAAOsI,YAS5B,IAAIyB,EAAcC,EAUlB,OAjBoB,GAAhBJ,IACHL,EAAgBtI,MAAM2H,OAAS5I,OAAOsI,YAAc,KACpDiB,EAAgBtI,MAAMgJ,UAAY,SAClCL,EAAeL,EAAgBW,cAGhC9B,IAGA4B,EAAgBhG,KAAKmG,IAAIL,EAAcF,GACvCG,EAAeC,EAAgBhB,EAE3Be,EAAeF,IAClBE,EAAe/F,KAAKmG,IAAIN,EAAaH,GACrCM,EAAgBD,EAAef,GAGzB,CAAEL,MAAOoB,EAAcnB,OAAQoB,EAAe,ECHhCI,CAAenB,EAASD,MAAOC,EAASH,UAC1C,EAQnB,MAAO,CAAEuB,KADI,OACEC,QAtBC,KACf,MAAMC,EAAcnB,IACpBP,EAAQF,MAAQM,EAASC,cACzBL,EAAQD,OAASK,EAASE,eAC1BN,EAAQ5H,MAAM0H,MAAQ4B,EAAY5B,MAAQ,KAC1CE,EAAQ5H,MAAM2H,OAAS2B,EAAY3B,OAAS,IAAI,EAiBzB4B,cALF,KACd,CAAE7B,MAAOM,EAASC,cAAeN,OAAQK,EAASE,iBAInB,EC/BxC,IAAesB,EAAA,CAEdC,QAAQ,EACRC,KAAM5J,SAASoF,cAAc,UAC7BwC,MAAO,IACPC,OAAQ,IACRG,IAAK,IACLG,cAAe,KACfC,eAAgB,KAChBlB,KAAM,KACNe,MAAO,KACP4B,KAAM,UACNC,gBAAiB,CAAEC,MAAO,EAAGC,IAAK,IAAKC,QAAS,GAEhDlC,UAAW/H,SAASmG,KACpB+D,GAAI,mBACJC,aAAclL,OAAOmL,iBACrBC,QAAS,MCdH,MAAMC,EAAY,KACxB,MAAMvC,EAAY/H,SAASoF,cAAc,OACnCmF,EAASvK,SAASoF,cAAc,UAChCoF,EAAiBxK,SAASoF,cAAc,OACxCqF,EAAazK,SAASoF,cAAc,UAC1C,IAAIsF,GAAW,EACXA,GACH3C,EAAU4C,UAAUC,IAAI,QAGzB,MAKMtB,EAAO,KACZtJ,SAASmG,KAAKC,YAAY2B,GAC1BA,EAAU3B,YAAYoE,GACtBzC,EAAU3B,YAAYmE,GACtBxC,EAAU3B,YAAYqE,GACtBF,EAAOM,aAAa,KAAM,mCAC1B9C,EAAU8C,aAAa,KAAM,8BAC7BL,EAAeK,aAAa,KAAM,oCAClCJ,EAAWI,aAAa,KAAM,gCAC9BN,EAAOO,UAAY,yBACnBL,EAAWK,UAAY,cAdvBP,EAAOtI,iBAAiB,QAAS8I,GACjCR,EAAOtI,iBAAiB,aAAc+I,GACtCT,EAAOtI,iBAAiB,aAAcgJ,EAaxB,EAGTD,EAAsB,KAC3BN,GAAW3C,EAAU4C,UAAUC,IAAI,+BAAoC,EAGlEK,EAAsB,KAC3B,GAAIP,EAAU,CACb,MAAMQ,EAAQlL,SAASmL,uBACtB,gCAED,GAAID,EAAMrH,OAAS,EAClB,IAAK,IAAI+F,KAAQsB,EACU,iBAAfA,EAAMtB,IAChBsB,EAAMtB,GAAMe,UAAU5I,OAAO,+BAIhC,GAOIqJ,EAAWlD,IAChBsC,EAAeM,UACd,OACA5C,EAASN,MACT,IACAM,EAAShB,KACT,MACAgB,EAASL,OACT,IACAK,EAAShB,KACT,QACAgB,EAASF,IACT,UAAU,EAGN+C,EAAiB,KAClBL,GACH3C,EAAU4C,UAAU5I,OAAO,QAC3BsJ,YAAW,KACVd,EAAOO,UAAY,yBAAyB,GAC1C,OAEHO,YAAW,KACVd,EAAOO,UAAY,wBAAwB,GACzC,KACH/C,EAAU4C,UAAUC,IAAI,SAGzBF,GAAYA,CAAQ,EAIrB,OAFApB,IAEO,CAAEA,OAAMgC,OApCA,KAAMpD,MACpBkD,EAAQlD,EAAS,EAmCKuC,aAAY,iBCrEZc,IACvB,IAAIrD,EAAW,IAAKwB,KAAa6B,GACjC,MAAMzD,EAAUI,EAAS0B,KACnB4B,EAAMlB,IACNmB,EAAiBD,EAAIf,WACrBiB,EAAM5D,EAAQ6D,WAAWzD,EAASmC,SAClCuB,EAAS,GAWTC,EAAO,CAACC,EAAWvH,KACxB,MAAMwH,EAAQH,EAAOE,GACjBC,GACHA,EAAMC,SAASvF,IACdA,EAAGwF,KAAK,KAAM1H,EAAK,GAEpB,EAGIhE,EAAOmH,EAAK,CACjBE,MAAOM,EAASN,MAChBC,OAAQK,EAASL,OACjBX,KAAMgB,EAAShB,KACfc,IAAKE,EAASF,IACdC,MAAOC,EAASD,MAChBH,UACAC,UAAWG,EAASH,YAMfmE,EAAkBC,UACvBN,EAAK,SAAU3D,QNxDOiE,WACvB/M,QAAQgN,IAAIC,GACZjN,QAAQgN,IAAI,sBACZ,MAAME,EAAStM,SAASuM,eAAe,oBACvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5BJ,EAAOK,QAAQC,IAEd,MAAM5H,EAAO,IAAIC,KAAK,CAAC2H,GAAa,CAAE1H,KAAM,cACtC2H,EAAaC,EAA6B1M,kBAAC,aAAc,CAC9DG,KAAMyE,EAAKzE,OAEN4D,EAAiBa,EAAK+H,SAI5B,GAAI9N,OAAO4F,gBAAkBV,EAAe6I,OAC3C,OAAO7I,EAAe6I,OAAOH,GAAYI,MAAK,KAC7CR,IACArN,QAAQgN,IAAI,YAAY,IAK1BnN,OAAOiO,OAASL,EAAWM,YAEZhJ,EAAeiJ,WAAY,GASzC,GACD,EMsBKC,GACNxB,EAAK,QAAS3D,GACQ,aAAlBA,EAAS2B,OACZgC,EAAK,gBAAiB3D,GACtBA,EAAS4B,gBAAgBG,UACzB,EAeIqD,EAAS,KACdxF,EAAQoC,GAAKhC,EAASgC,GACtBhC,EAASH,UAAU3B,YAAY0B,EAAQ,EAgBxC,OATA7I,OAAOsO,SAAW,KACjBhN,EAAKgJ,UACL,MAAM3B,MAAEA,EAAKC,OAAEA,GAAWtH,EAAKkJ,gBAC/BvB,EAASC,cAAgBP,EACzBM,EAASE,eAAiBP,EAC1B2D,EAAIF,OAAO,IAAKpD,GAAW,EA1Bf,MACZ3H,EAAKgJ,UACL,MAAM3B,MAAEA,EAAKC,OAAEA,GAAWtH,EAAKkJ,gBAC/BvB,EAASC,cAAgBP,EACzBM,EAASE,eAAiBP,EAC1ByF,IACA9B,EAAIlC,OACJkC,EAAIF,OAAO,IAAKpD,IAnBhBuD,EAAexJ,iBAAiB,QAASiK,EAqBnB,EAmBvB5C,GAEO,IACHpB,EACHsF,GAzEU,CAAC1B,EAAWrF,KACjBmF,EAAOE,KACXF,EAAOE,GAAa,IAErBF,EAAOE,GAAW/G,KAAK0B,GAChB,KACNmF,EAAOE,GAAaF,EAAOE,GAAW2B,QAAQC,GAAYjH,IAAOiH,GAAQ,GAoE1EC,WAhBkB,KAClBzB,GAAiB,EAgBjBR,MACA"}